enum AuthProviderTypeEnum {
  GOOGLE
}

type AuthResponse {
  token: ID
  user: Users
}

type Business {
  id: ID!
  name: String!
}

type Chat {
  createdAt: ISO8601DateTime!
  id: ID!
  jobTitle: String!
  messages: [ChatsMessage!]!
  score: Int
  status: ChatsStatusEnum!
}

"""Autogenerated return type of Chat."""
type ChatPayload {
  chatId: ID!
  content: String!
  i: Int
  initial: Boolean!
  requestId: String!
}

type ChatsMessage {
  fromUser: Boolean!
  message: String!
}

enum ChatsStatusEnum {
  CANCELLED
  FINISHED
  STARTED
}

type Document {
  id: ID!
  name: String!
  url: String
}

"""An ISO 8601-encoded datetime"""
scalar ISO8601DateTime

type Mutation {
  authPasswordResetRequest(email: String!): String!
  authProviderAuthenticate(data: String!, firstName: String, lastName: String, provider: AuthProviderTypeEnum!, referredByUserUniqueId: ID, resumeUniqueId: ID): AuthResponse!
  authResetPassword(newPassword: String!, resetPasswordToken: String!): String!
  authSignIn(email: String!, password: String!): AuthResponse!
  authSignUp(email: String!, firstName: String, lastName: String, referredByUserUniqueId: ID, resumeUniqueId: ID): AuthResponse!
  chatAddMessage(chatId: String!, message: String!): Chat!
  chatStart: Chat!
  updateBusiness(name: String!): Business!
  updateUser(attributes: UsersInputObject!): Users!
  uploadDocument(name: String!, uploadSignedId: ID!): Document!
  userEmailVerify(emailVerificationCode: String!, firstName: String!, lastName: String!, password: String!): AuthResponse!
}

type Query {
  chats(chatIds: [ID!]): [Chat!]!
  documents(documentIds: [ID!]): [Document!]!
  emailVerifyAllowed(emailVerificationCode: String!): Users
  resetPasswordAllowed(resetPasswordToken: String!): Boolean!
  user: Users!
}

"""The subscription root for the GraphQL schema"""
type Subscription {
  chat: ChatPayload!
}

enum SubscriptionPlanEnum {
  FREE
  PRO
  PRO_QUARTERLY
}

type Users {
  business: Business!
  completedAllChecklistItems: Boolean!
  email: String!
  firstName: String
  hasSubscription: Boolean!
  id: ID!
  isAdvisoryClient: Boolean!
  isAdvisoryOrgAccount: Boolean!
  lastActiveAt: ISO8601DateTime
  lastJobUpdatedAt: ISO8601DateTime
  lastName: String
  linkedinUrl: String
  location: String
  numClients: Int!
  numJobs: Int!
  numOwnClients: Int!
  numStartedInterviews: Int!
  numUploadedResumes: Int!
  phoneNumber: String
  plan: SubscriptionPlanEnum!
  referralTokens: Int!
  tokenAchievements: Int!
  tokenCoverLetter: Int!
  tokenInterview: Int!
  tokenInterviewQuestions: Int!
  tokenJobMatch: Int!
  tokenLearnSkills: Int!
  tokenProfessionalSummary: Int!
  tokenSalaryInsights: Int!
  uniqueId: String!
  usedChromeExtension: Boolean!
  usedJobAiFeature: Boolean!
  usedResumeAiFeature: Boolean!
  verified: Boolean!
  website: String
}

input UsersInputObject {
  firstName: String
  lastName: String
  linkedinUrl: String
  location: String
  phoneNumber: String
  website: String
}
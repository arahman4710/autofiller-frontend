import { z } from 'zod'
export type Maybe<T> = T | null
export type InputMaybe<T> = Maybe<T>
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] }
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> }
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> }
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = {
  [_ in K]?: never
}
export type Incremental<T> =
  | T
  | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never }
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string }
  String: { input: string; output: string }
  Boolean: { input: boolean; output: boolean }
  Int: { input: number; output: number }
  Float: { input: number; output: number }
  ISO8601DateTime: { input: any; output: any }
}

export enum AdvisorSortEnum {
  Clients = 'CLIENTS',
  JobsAdded = 'JOBS_ADDED',
  JobsShared = 'JOBS_SHARED',
}

export type AdvisorUsers = {
  __typename?: 'AdvisorUsers'
  id: Scalars['ID']['output']
  jobsAdded: Array<UsersJobs>
  jobsShared: Array<UsersJobs>
  user: Users
}

export enum AuthProviderTypeEnum {
  Google = 'GOOGLE',
}

export type AuthResponse = {
  __typename?: 'AuthResponse'
  token?: Maybe<Scalars['ID']['output']>
  user?: Maybe<Users>
}

export type CachedStreamingType = {
  __typename?: 'CachedStreamingType'
  isSync: Scalars['Boolean']['output']
  result: Scalars['String']['output']
}

export type ClientGroup = {
  __typename?: 'ClientGroup'
  clients: Array<ClientUsers>
  createdAt: Scalars['ISO8601DateTime']['output']
  createdByUser: Users
  id: Scalars['ID']['output']
  name: Scalars['String']['output']
}

export type ClientUsers = {
  __typename?: 'ClientUsers'
  addedJobs: Array<UsersJobs>
  allJobs: Array<UsersJobs>
  appliedJobs: Array<UsersJobs>
  id: Scalars['ID']['output']
  interviewedJobs: Array<UsersJobs>
  numAddedJobs: Scalars['Int']['output']
  numAllJobs: Scalars['Int']['output']
  numAppliedJobs: Scalars['Int']['output']
  numInterviewedJobs: Scalars['Int']['output']
  numOfferedJobs: Scalars['Int']['output']
  numRejectedJobs: Scalars['Int']['output']
  offeredJobs: Array<UsersJobs>
  rejectedJobs: Array<UsersJobs>
  user: Users
}

export type Contacts = {
  __typename?: 'Contacts'
  email?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  name?: Maybe<Scalars['String']['output']>
}

export type ContactsInputObject = {
  email: Scalars['String']['input']
  name: Scalars['String']['input']
}

export enum CoverLetterLengthEnum {
  Long = 'LONG',
  Medium = 'MEDIUM',
  Short = 'SHORT',
}

export enum CoverLetterToneEnum {
  Casual = 'CASUAL',
  Excited = 'EXCITED',
  Formal = 'FORMAL',
  Informational = 'INFORMATIONAL',
}

export type FieldMessageType = {
  __typename?: 'FieldMessageType'
  errorMessage?: Maybe<Scalars['String']['output']>
  field: Scalars['String']['output']
}

export type Interview = {
  __typename?: 'Interview'
  createdAt: Scalars['ISO8601DateTime']['output']
  id: Scalars['ID']['output']
  interviewType: InterviewsTypeEnum
  jobTitle: Scalars['String']['output']
  messages: Array<InterviewsMessage>
  score?: Maybe<Scalars['Int']['output']>
  status: InterviewsStatusEnum
}

export type InterviewsMessage = {
  __typename?: 'InterviewsMessage'
  fromUser: Scalars['Boolean']['output']
  message: Scalars['String']['output']
}

export enum InterviewsStatusEnum {
  Cancelled = 'CANCELLED',
  Finished = 'FINISHED',
  Started = 'STARTED',
}

export enum InterviewsTypeEnum {
  IntroRecruiterScreen = 'INTRO_RECRUITER_SCREEN',
  JobInterviewBehavioralTechnical = 'JOB_INTERVIEW_BEHAVIORAL_TECHNICAL',
}

export enum JobPostingSortEnum {
  ClientsApplied = 'CLIENTS_APPLIED',
  ClientsSharedWith = 'CLIENTS_SHARED_WITH',
}

/** Autogenerated return type of LearnSkills. */
export type LearnSkillsPayload = {
  __typename?: 'LearnSkillsPayload'
  content: Scalars['String']['output']
  i?: Maybe<Scalars['Int']['output']>
  initial: Scalars['Boolean']['output']
  requestId: Scalars['String']['output']
  usersJobId: Scalars['ID']['output']
}

export type Mutation = {
  __typename?: 'Mutation'
  addContactToUsersJob: UsersJobs
  addUsersToClientGroup: ClientGroup
  assignClientToAdvisor: Scalars['String']['output']
  authPasswordResetRequest: Scalars['String']['output']
  authProviderAuthenticate: AuthResponse
  authResetPassword: Scalars['String']['output']
  authSignIn: AuthResponse
  authSignUp: AuthResponse
  billingPortalUrl: Scalars['String']['output']
  coverLetterBodyPrefillApplication: Scalars['String']['output']
  coverLetterUpsert: UsersJobsCoverLetterType
  createClientGroup: ClientGroup
  createFeedback: Scalars['String']['output']
  createResume: Resumes
  createResumeFromLinkedinUrl: Resumes
  createResumeUnauthenticated: Resumes
  createUsersJob: UsersJobs
  duplicateResume: Resumes
  editClientGroup: ClientGroup
  exportUsersJobToCsv: Scalars['String']['output']
  fetchJobKeywords: Array<Scalars['String']['output']>
  fetchMissingSkillsOfJobResume: Array<Scalars['String']['output']>
  generateCoverLetter: UsersJobsCoverLetterType
  generateJobAchievement: Array<Scalars['String']['output']>
  generateOneJobAchievement: Scalars['String']['output']
  generateProfessionalSummary: Scalars['String']['output']
  interviewAddMessage: Interview
  interviewStartMock: Interview
  learnSkills: CachedStreamingType
  matchScore: UsersJobsMatch
  optimizeResumeForJob: Resumes
  previewAuthResume: Scalars['String']['output']
  previewResume: Scalars['String']['output']
  questionPrefillApplication: Scalars['String']['output']
  salaryInsights: Scalars['String']['output']
  sampleInterviewQuestions: CachedStreamingType
  scoreResume: ResumesScoreType
  shareJobWithClients: UsersJobs
  subscriptionsRedeemLtdPromoCode: Users
  subscriptionsSessionCreate: Scalars['String']['output']
  subscriptionsSessionFetch: Scalars['String']['output']
  updateArchivedCoverLetter: UsersJobsCoverLetterType
  updateArchivedResume: Resumes
  updateLastPageLoadedAt: Users
  updateResume: Resumes
  updateResumeUnauthenticated: Resumes
  updateShowOriginalDocumentResume: Resumes
  updateTemplateResume: Resumes
  updateUser: Users
  updateUsersJob: UsersJobs
  uploadResume: Resumes
  usedChromeExtension: Scalars['String']['output']
  userEmailVerify: AuthResponse
}

export type MutationAddContactToUsersJobArgs = {
  contact: ContactsInputObject
  id: Scalars['ID']['input']
}

export type MutationAddUsersToClientGroupArgs = {
  clientGroupId: Scalars['ID']['input']
  userIds: Array<Scalars['ID']['input']>
}

export type MutationAssignClientToAdvisorArgs = {
  advisorId: Scalars['ID']['input']
  clientIds: Array<Scalars['ID']['input']>
}

export type MutationAuthPasswordResetRequestArgs = {
  email: Scalars['String']['input']
}

export type MutationAuthProviderAuthenticateArgs = {
  data: Scalars['String']['input']
  firstName?: InputMaybe<Scalars['String']['input']>
  lastName?: InputMaybe<Scalars['String']['input']>
  provider: AuthProviderTypeEnum
  referredByUserUniqueId?: InputMaybe<Scalars['ID']['input']>
  resumeUniqueId?: InputMaybe<Scalars['ID']['input']>
}

export type MutationAuthResetPasswordArgs = {
  newPassword: Scalars['String']['input']
  resetPasswordToken: Scalars['String']['input']
}

export type MutationAuthSignInArgs = {
  email: Scalars['String']['input']
  password: Scalars['String']['input']
}

export type MutationAuthSignUpArgs = {
  email: Scalars['String']['input']
  firstName?: InputMaybe<Scalars['String']['input']>
  lastName?: InputMaybe<Scalars['String']['input']>
  referredByUserUniqueId?: InputMaybe<Scalars['ID']['input']>
  resumeUniqueId?: InputMaybe<Scalars['ID']['input']>
}

export type MutationCoverLetterBodyPrefillApplicationArgs = {
  resumeId: Scalars['ID']['input']
  usersJobId: Scalars['ID']['input']
}

export type MutationCoverLetterUpsertArgs = {
  attributes: UsersJobsCoverLetterInputObject
  usersJobId: Scalars['ID']['input']
}

export type MutationCreateClientGroupArgs = {
  name: Scalars['String']['input']
}

export type MutationCreateFeedbackArgs = {
  feedback: Scalars['String']['input']
  subject?: InputMaybe<Scalars['String']['input']>
}

export type MutationCreateResumeArgs = {
  name: Scalars['String']['input']
}

export type MutationCreateResumeFromLinkedinUrlArgs = {
  linkedinProfileUrl: Scalars['String']['input']
}

export type MutationCreateResumeUnauthenticatedArgs = {
  attributes?: InputMaybe<ResumesInputObject>
}

export type MutationCreateUsersJobArgs = {
  applicationInstructions?: InputMaybe<Scalars['String']['input']>
  companyName: Scalars['String']['input']
  contact?: InputMaybe<ContactsInputObject>
  interviewStep?: InputMaybe<UsersJobsInterviewStepEnum>
  isRemote?: InputMaybe<Scalars['Boolean']['input']>
  jobDetails?: InputMaybe<Scalars['String']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  notes?: InputMaybe<Scalars['String']['input']>
  payPeriod?: InputMaybe<UsersJobsPayPeriodEnum>
  position: Scalars['String']['input']
  rejectedStage?: InputMaybe<UsersJobsRejectedStageEnum>
  resumeId?: InputMaybe<Scalars['ID']['input']>
  salaryMax?: InputMaybe<Scalars['Int']['input']>
  salaryMin?: InputMaybe<Scalars['Int']['input']>
  status?: InputMaybe<UsersJobsStatusEnum>
  uniqueUrl?: InputMaybe<Scalars['Boolean']['input']>
  url?: InputMaybe<Scalars['String']['input']>
}

export type MutationDuplicateResumeArgs = {
  id: Scalars['ID']['input']
}

export type MutationEditClientGroupArgs = {
  clientGroupId: Scalars['ID']['input']
  name?: InputMaybe<Scalars['String']['input']>
  userIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export type MutationFetchJobKeywordsArgs = {
  usersJobId: Scalars['ID']['input']
}

export type MutationFetchMissingSkillsOfJobResumeArgs = {
  resumeId: Scalars['ID']['input']
  usersJobId: Scalars['ID']['input']
}

export type MutationGenerateCoverLetterArgs = {
  coverLetterLength?: InputMaybe<CoverLetterLengthEnum>
  coverLetterTone?: InputMaybe<CoverLetterToneEnum>
  resumeId: Scalars['ID']['input']
  usersJobId: Scalars['ID']['input']
}

export type MutationGenerateJobAchievementArgs = {
  indices: Array<Scalars['Int']['input']>
  keywords?: InputMaybe<Array<Scalars['String']['input']>>
  workPositionId: Scalars['ID']['input']
}

export type MutationGenerateOneJobAchievementArgs = {
  index: Scalars['Int']['input']
  keywords?: InputMaybe<Array<Scalars['String']['input']>>
  workPositionId: Scalars['ID']['input']
}

export type MutationGenerateProfessionalSummaryArgs = {
  id: Scalars['ID']['input']
  keywords?: InputMaybe<Array<Scalars['String']['input']>>
  useExisting: Scalars['Boolean']['input']
}

export type MutationInterviewAddMessageArgs = {
  interviewId: Scalars['String']['input']
  message: Scalars['String']['input']
}

export type MutationInterviewStartMockArgs = {
  interviewType: InterviewsTypeEnum
  jobDescription?: InputMaybe<Scalars['String']['input']>
  jobTitle: Scalars['String']['input']
  resumeId?: InputMaybe<Scalars['ID']['input']>
  usersJobId?: InputMaybe<Scalars['ID']['input']>
}

export type MutationLearnSkillsArgs = {
  usersJobId: Scalars['ID']['input']
}

export type MutationMatchScoreArgs = {
  resumeId: Scalars['ID']['input']
  usersJobId: Scalars['ID']['input']
}

export type MutationOptimizeResumeForJobArgs = {
  keywords?: InputMaybe<Array<Scalars['String']['input']>>
  resumeId: Scalars['ID']['input']
  skills?: InputMaybe<Array<Scalars['String']['input']>>
  usersJobId: Scalars['ID']['input']
}

export type MutationPreviewAuthResumeArgs = {
  id: Scalars['ID']['input']
  template: ResumesTemplateEnum
}

export type MutationPreviewResumeArgs = {
  attributes: ResumesInputObject
  template: ResumesTemplateEnum
}

export type MutationQuestionPrefillApplicationArgs = {
  question: Scalars['String']['input']
  resumeId: Scalars['ID']['input']
}

export type MutationSalaryInsightsArgs = {
  usersJobId: Scalars['ID']['input']
}

export type MutationSampleInterviewQuestionsArgs = {
  usersJobId: Scalars['ID']['input']
}

export type MutationScoreResumeArgs = {
  id: Scalars['ID']['input']
}

export type MutationShareJobWithClientsArgs = {
  clientGroupIds: Array<Scalars['ID']['input']>
  userIds: Array<Scalars['ID']['input']>
  usersJobId: Scalars['ID']['input']
}

export type MutationSubscriptionsRedeemLtdPromoCodeArgs = {
  promoCode: Scalars['String']['input']
}

export type MutationSubscriptionsSessionCreateArgs = {
  plan: SubscriptionPlanEnum
}

export type MutationSubscriptionsSessionFetchArgs = {
  sessionId: Scalars['ID']['input']
}

export type MutationUpdateArchivedCoverLetterArgs = {
  archived: Scalars['Boolean']['input']
  coverLetterId: Scalars['ID']['input']
}

export type MutationUpdateArchivedResumeArgs = {
  archived: Scalars['Boolean']['input']
  id: Scalars['ID']['input']
}

export type MutationUpdateResumeArgs = {
  attributes: ResumesInputObject
  id: Scalars['ID']['input']
}

export type MutationUpdateResumeUnauthenticatedArgs = {
  attributes: ResumesInputObject
  id: Scalars['ID']['input']
}

export type MutationUpdateShowOriginalDocumentResumeArgs = {
  id: Scalars['ID']['input']
  showOriginalDocument: Scalars['Boolean']['input']
}

export type MutationUpdateTemplateResumeArgs = {
  id: Scalars['ID']['input']
  template: ResumesTemplateEnum
  templateColorEnum?: InputMaybe<ResumesTemplateColorEnum>
}

export type MutationUpdateUserArgs = {
  attributes: UsersInputObject
}

export type MutationUpdateUsersJobArgs = {
  applicationInstructions?: InputMaybe<Scalars['String']['input']>
  archived?: InputMaybe<Scalars['Boolean']['input']>
  companyName?: InputMaybe<Scalars['String']['input']>
  id: Scalars['ID']['input']
  interviewStep?: InputMaybe<UsersJobsInterviewStepEnum>
  isRemote?: InputMaybe<Scalars['Boolean']['input']>
  jobDetails?: InputMaybe<Scalars['String']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  notes?: InputMaybe<Scalars['String']['input']>
  payPeriod?: InputMaybe<UsersJobsPayPeriodEnum>
  position?: InputMaybe<Scalars['String']['input']>
  rejectedStage?: InputMaybe<UsersJobsRejectedStageEnum>
  resumeId?: InputMaybe<Scalars['ID']['input']>
  salaryMax?: InputMaybe<Scalars['Int']['input']>
  salaryMin?: InputMaybe<Scalars['Int']['input']>
  status?: InputMaybe<UsersJobsStatusEnum>
  url?: InputMaybe<Scalars['String']['input']>
}

export type MutationUploadResumeArgs = {
  id?: InputMaybe<Scalars['ID']['input']>
  name: Scalars['String']['input']
  uploadSignedId: Scalars['ID']['input']
}

export type MutationUserEmailVerifyArgs = {
  emailVerificationCode: Scalars['String']['input']
  firstName: Scalars['String']['input']
  lastName: Scalars['String']['input']
  password: Scalars['String']['input']
}

export type PaginatedAdvisorUsers = {
  __typename?: 'PaginatedAdvisorUsers'
  data: Array<AdvisorUsers>
  pagination: Pagination
}

export type PaginatedClientUsers = {
  __typename?: 'PaginatedClientUsers'
  data: Array<ClientUsers>
  pagination: Pagination
}

export type PaginatedUsersJobs = {
  __typename?: 'PaginatedUsersJobs'
  data: Array<UsersJobs>
  pagination: Pagination
}

export type Pagination = {
  __typename?: 'Pagination'
  page: Scalars['Int']['output']
  pageSize: Scalars['Int']['output']
  totalCount: Scalars['Int']['output']
  totalPages: Scalars['Int']['output']
}

export type Query = {
  __typename?: 'Query'
  advisors: PaginatedAdvisorUsers
  client: Users
  clientGroups: Array<ClientGroup>
  clientResumes: Array<Resumes>
  clientUsersJobs: Array<UsersJobs>
  clients: PaginatedClientUsers
  coverLetters: Array<UsersJobsCoverLetterType>
  emailVerifyAllowed?: Maybe<Users>
  findUsersJobByInfo?: Maybe<UsersJobs>
  findUsersJobByUrl?: Maybe<UsersJobs>
  interviews: Array<Interview>
  paginatedUsersJobs: PaginatedUsersJobs
  resetPasswordAllowed: Scalars['Boolean']['output']
  resumeSimpleAnalysis: Array<FieldMessageType>
  resumeUnauthenticated?: Maybe<Resumes>
  resumes: Array<Resumes>
  user: Users
  usersJobs: Array<UsersJobs>
}

export type QueryAdvisorsArgs = {
  fromDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  page?: InputMaybe<Scalars['Int']['input']>
  perPage?: InputMaybe<Scalars['Int']['input']>
  role?: InputMaybe<UsersRoleEnum>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  sortBy?: InputMaybe<AdvisorSortEnum>
  sortByDirection?: InputMaybe<SortByDirectionEnum>
  toDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
}

export type QueryClientArgs = {
  clientId: Scalars['ID']['input']
}

export type QueryClientGroupsArgs = {
  clientGroupIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export type QueryClientResumesArgs = {
  clientId: Scalars['ID']['input']
  resumeIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export type QueryClientUsersJobsArgs = {
  archived?: InputMaybe<Scalars['Boolean']['input']>
  clientId: Scalars['ID']['input']
  partnerCreated?: InputMaybe<Scalars['Boolean']['input']>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  usersJobIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export type QueryClientsArgs = {
  advisorIds?: InputMaybe<Array<Scalars['ID']['input']>>
  fromDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  page?: InputMaybe<Scalars['Int']['input']>
  perPage?: InputMaybe<Scalars['Int']['input']>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  toDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
}

export type QueryCoverLettersArgs = {
  archived?: InputMaybe<Scalars['Boolean']['input']>
  coverLetterIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export type QueryEmailVerifyAllowedArgs = {
  emailVerificationCode: Scalars['String']['input']
}

export type QueryFindUsersJobByInfoArgs = {
  companyName: Scalars['String']['input']
  location?: InputMaybe<Scalars['String']['input']>
  position: Scalars['String']['input']
  url?: InputMaybe<Scalars['String']['input']>
}

export type QueryFindUsersJobByUrlArgs = {
  url: Scalars['String']['input']
}

export type QueryInterviewsArgs = {
  interviewIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export type QueryPaginatedUsersJobsArgs = {
  archived?: InputMaybe<Scalars['Boolean']['input']>
  page?: InputMaybe<Scalars['Int']['input']>
  perPage?: InputMaybe<Scalars['Int']['input']>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  sortBy?: InputMaybe<JobPostingSortEnum>
  sortByDirection?: InputMaybe<SortByDirectionEnum>
}

export type QueryResetPasswordAllowedArgs = {
  resetPasswordToken: Scalars['String']['input']
}

export type QueryResumeSimpleAnalysisArgs = {
  id: Scalars['ID']['input']
}

export type QueryResumeUnauthenticatedArgs = {
  id: Scalars['ID']['input']
}

export type QueryResumesArgs = {
  aiGenerated?: InputMaybe<Scalars['Boolean']['input']>
  archived?: InputMaybe<Scalars['Boolean']['input']>
  resumeIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export type QueryUsersJobsArgs = {
  archived?: InputMaybe<Scalars['Boolean']['input']>
  partnerCreated?: InputMaybe<Scalars['Boolean']['input']>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  usersJobIds?: InputMaybe<Array<Scalars['ID']['input']>>
}

export enum ResumeDocumentType {
  Doc = 'DOC',
  Pdf = 'PDF',
}

export enum ResumeSortableSections {
  Certifications = 'CERTIFICATIONS',
  Courseworks = 'COURSEWORKS',
  Educations = 'EDUCATIONS',
  Involvements = 'INVOLVEMENTS',
  Projects = 'PROJECTS',
  Skills = 'SKILLS',
  WorkExperiences = 'WORK_EXPERIENCES',
}

export type Resumes = {
  __typename?: 'Resumes'
  aiGenerated: Scalars['Boolean']['output']
  archived: Scalars['Boolean']['output']
  certifications: Array<ResumesCertification>
  courseworks: Array<ResumesCoursework>
  createdAt: Scalars['ISO8601DateTime']['output']
  documentType?: Maybe<ResumeDocumentType>
  documentUrl?: Maybe<Scalars['String']['output']>
  educations: Array<ResumesEducation>
  email?: Maybe<Scalars['String']['output']>
  firstName?: Maybe<Scalars['String']['output']>
  groupedSkills: Array<ResumesGroupedSkill>
  hideCertifications: Scalars['Boolean']['output']
  hideCourseworks: Scalars['Boolean']['output']
  hideEducations: Scalars['Boolean']['output']
  hideInvolvements: Scalars['Boolean']['output']
  hideProjects: Scalars['Boolean']['output']
  hideSkills: Scalars['Boolean']['output']
  hideSummary: Scalars['Boolean']['output']
  hideWorkExperiences: Scalars['Boolean']['output']
  id: Scalars['ID']['output']
  interviewRate?: Maybe<Scalars['Int']['output']>
  involvements: Array<ResumesInvolvement>
  lastName?: Maybe<Scalars['String']['output']>
  linkedinUrl?: Maybe<Scalars['String']['output']>
  location?: Maybe<Scalars['String']['output']>
  mostRecentEmployer?: Maybe<Scalars['String']['output']>
  name: Scalars['String']['output']
  phoneNumber?: Maybe<Scalars['String']['output']>
  professionalSummary?: Maybe<Scalars['String']['output']>
  projects: Array<ResumesProject>
  sectionsOrder: Array<ResumeSortableSections>
  showOriginalDocument: Scalars['Boolean']['output']
  simpleAnalysis: Array<FieldMessageType>
  suggestedSkills: Array<Scalars['String']['output']>
  template: ResumesTemplateEnum
  templateColorEnum?: Maybe<ResumesTemplateColorEnum>
  uniqueId?: Maybe<Scalars['ID']['output']>
  updatedAt: Scalars['ISO8601DateTime']['output']
  website?: Maybe<Scalars['String']['output']>
  workExperiences: Array<ResumesWorkExperience>
}

export type ResumesCertification = {
  __typename?: 'ResumesCertification'
  completionDate?: Maybe<Scalars['ISO8601DateTime']['output']>
  id: Scalars['ID']['output']
  name: Scalars['String']['output']
  provider?: Maybe<Scalars['String']['output']>
}

export type ResumesCertificationInputObject = {
  completionDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  id?: InputMaybe<Scalars['ID']['input']>
  name: Scalars['String']['input']
  provider?: InputMaybe<Scalars['String']['input']>
}

export type ResumesCoursework = {
  __typename?: 'ResumesCoursework'
  achievements: Array<Scalars['String']['output']>
  currentlyWorkingOnCourse: Scalars['Boolean']['output']
  endDate?: Maybe<Scalars['ISO8601DateTime']['output']>
  id: Scalars['ID']['output']
  institutionName?: Maybe<Scalars['String']['output']>
  name?: Maybe<Scalars['String']['output']>
}

export type ResumesCourseworkInputObject = {
  achievements: Array<Scalars['String']['input']>
  currentlyWorkingOnCourse?: InputMaybe<Scalars['Boolean']['input']>
  endDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  id?: InputMaybe<Scalars['ID']['input']>
  institutionName?: InputMaybe<Scalars['String']['input']>
  name?: InputMaybe<Scalars['String']['input']>
}

export type ResumesEducation = {
  __typename?: 'ResumesEducation'
  additionalInformation?: Maybe<Scalars['String']['output']>
  currentlyInEducation: Scalars['Boolean']['output']
  degree?: Maybe<Scalars['String']['output']>
  endDate?: Maybe<Scalars['ISO8601DateTime']['output']>
  gpa?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  institutionName: Scalars['String']['output']
  location?: Maybe<Scalars['String']['output']>
  startDate?: Maybe<Scalars['ISO8601DateTime']['output']>
}

export type ResumesEducationInputObject = {
  additionalInformation?: InputMaybe<Scalars['String']['input']>
  currentlyInEducation?: InputMaybe<Scalars['Boolean']['input']>
  degree?: InputMaybe<Scalars['String']['input']>
  endDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  gpa?: InputMaybe<Scalars['String']['input']>
  id?: InputMaybe<Scalars['ID']['input']>
  institutionName: Scalars['String']['input']
  location?: InputMaybe<Scalars['String']['input']>
  startDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
}

export type ResumesGroupedSkill = {
  __typename?: 'ResumesGroupedSkill'
  category?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  skills: Array<Scalars['String']['output']>
}

export type ResumesGroupedSkillInputObject = {
  category?: InputMaybe<Scalars['String']['input']>
  id?: InputMaybe<Scalars['ID']['input']>
  skills: Array<Scalars['String']['input']>
}

export type ResumesInputObject = {
  certificationsAttributes: Array<ResumesCertificationInputObject>
  courseworksAttributes: Array<ResumesCourseworkInputObject>
  educationsAttributes: Array<ResumesEducationInputObject>
  email?: InputMaybe<Scalars['String']['input']>
  firstName?: InputMaybe<Scalars['String']['input']>
  groupedSkillsAttributes: Array<ResumesGroupedSkillInputObject>
  hideCertifications?: InputMaybe<Scalars['Boolean']['input']>
  hideCourseworks?: InputMaybe<Scalars['Boolean']['input']>
  hideEducations?: InputMaybe<Scalars['Boolean']['input']>
  hideInvolvements?: InputMaybe<Scalars['Boolean']['input']>
  hideProjects?: InputMaybe<Scalars['Boolean']['input']>
  hideSkills?: InputMaybe<Scalars['Boolean']['input']>
  hideSummary?: InputMaybe<Scalars['Boolean']['input']>
  hideWorkExperiences?: InputMaybe<Scalars['Boolean']['input']>
  involvementsAttributes: Array<ResumesInvolvementInputObject>
  lastName?: InputMaybe<Scalars['String']['input']>
  linkedinUrl?: InputMaybe<Scalars['String']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  name?: InputMaybe<Scalars['String']['input']>
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  professionalSummary?: InputMaybe<Scalars['String']['input']>
  projectsAttributes: Array<ResumesProjectInputObject>
  sectionsOrder?: InputMaybe<Array<ResumeSortableSections>>
  website?: InputMaybe<Scalars['String']['input']>
  workExperiencesAttributes: Array<ResumesWorkExperienceInputObject>
}

export type ResumesInvolvement = {
  __typename?: 'ResumesInvolvement'
  achievements: Array<Scalars['String']['output']>
  currentlyWorkingOnInvolvement: Scalars['Boolean']['output']
  endDate?: Maybe<Scalars['ISO8601DateTime']['output']>
  id: Scalars['ID']['output']
  name?: Maybe<Scalars['String']['output']>
  organizationName?: Maybe<Scalars['String']['output']>
  startDate?: Maybe<Scalars['ISO8601DateTime']['output']>
}

export type ResumesInvolvementInputObject = {
  achievements: Array<Scalars['String']['input']>
  currentlyWorkingOnInvolvement?: InputMaybe<Scalars['Boolean']['input']>
  endDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  id?: InputMaybe<Scalars['ID']['input']>
  name?: InputMaybe<Scalars['String']['input']>
  organizationName?: InputMaybe<Scalars['String']['input']>
  startDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
}

export type ResumesProject = {
  __typename?: 'ResumesProject'
  achievements: Array<Scalars['String']['output']>
  currentlyWorkingOnProject: Scalars['Boolean']['output']
  endDate?: Maybe<Scalars['ISO8601DateTime']['output']>
  id: Scalars['ID']['output']
  name: Scalars['String']['output']
  startDate?: Maybe<Scalars['ISO8601DateTime']['output']>
}

export type ResumesProjectInputObject = {
  achievements: Array<Scalars['String']['input']>
  currentlyWorkingOnProject?: InputMaybe<Scalars['Boolean']['input']>
  endDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  id?: InputMaybe<Scalars['ID']['input']>
  name: Scalars['String']['input']
  startDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
}

export type ResumesScoreFieldTagType = {
  __typename?: 'ResumesScoreFieldTagType'
  tagName: Scalars['String']['output']
}

export type ResumesScoreFieldType = {
  __typename?: 'ResumesScoreFieldType'
  didPass: Scalars['Boolean']['output']
  errorMessage?: Maybe<Scalars['String']['output']>
  header: Scalars['String']['output']
  tags?: Maybe<Array<ResumesScoreFieldTagType>>
}

export type ResumesScoreType = {
  __typename?: 'ResumesScoreType'
  failed: Scalars['Int']['output']
  passed: Scalars['Int']['output']
  score: Scalars['Int']['output']
  scoreFields: Array<ResumesScoreFieldType>
  total: Scalars['Int']['output']
}

export enum ResumesTemplateColorEnum {
  BauhausLight = 'BAUHAUS_LIGHT',
  HarvardLight = 'HARVARD_LIGHT',
  NeueCyan = 'NEUE_CYAN',
  NeueEmerald = 'NEUE_EMERALD',
  NeueIndigo = 'NEUE_INDIGO',
  NeueLight = 'NEUE_LIGHT',
  OxfordCyan = 'OXFORD_CYAN',
  OxfordEmerald = 'OXFORD_EMERALD',
  OxfordIndigo = 'OXFORD_INDIGO',
  OxfordLight = 'OXFORD_LIGHT',
}

export enum ResumesTemplateEnum {
  Bauhaus = 'BAUHAUS',
  Harvard = 'HARVARD',
  Neue = 'NEUE',
  Oxford = 'OXFORD',
}

export type ResumesWorkExperience = {
  __typename?: 'ResumesWorkExperience'
  companyDescription?: Maybe<Scalars['String']['output']>
  companyName: Scalars['String']['output']
  id: Scalars['ID']['output']
  simpleAnalysis: Array<FieldMessageType>
  workPositions: Array<ResumesWorkPosition>
}

export type ResumesWorkExperienceInputObject = {
  companyDescription?: InputMaybe<Scalars['String']['input']>
  companyName: Scalars['String']['input']
  id?: InputMaybe<Scalars['ID']['input']>
  workPositionsAttributes: Array<ResumesWorkPositionInputObject>
}

export type ResumesWorkPosition = {
  __typename?: 'ResumesWorkPosition'
  achievements: Array<Scalars['String']['output']>
  currentlyInPosition: Scalars['Boolean']['output']
  endDate?: Maybe<Scalars['ISO8601DateTime']['output']>
  id: Scalars['ID']['output']
  location?: Maybe<Scalars['String']['output']>
  name: Scalars['String']['output']
  simpleAnalysis: Array<FieldMessageType>
  startDate?: Maybe<Scalars['ISO8601DateTime']['output']>
}

export type ResumesWorkPositionInputObject = {
  achievements: Array<Scalars['String']['input']>
  currentlyInPosition?: InputMaybe<Scalars['Boolean']['input']>
  endDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  id?: InputMaybe<Scalars['ID']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  name: Scalars['String']['input']
  startDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
}

/** Autogenerated return type of SampleInterviewQuestions. */
export type SampleInterviewQuestionsPayload = {
  __typename?: 'SampleInterviewQuestionsPayload'
  content: Scalars['String']['output']
  i?: Maybe<Scalars['Int']['output']>
  initial: Scalars['Boolean']['output']
  requestId: Scalars['String']['output']
  usersJobId: Scalars['ID']['output']
}

export enum SortByDirectionEnum {
  Asc = 'ASC',
  Desc = 'DESC',
}

/** The subscription root for the GraphQL schema */
export type Subscription = {
  __typename?: 'Subscription'
  learnSkills: LearnSkillsPayload
  sampleInterviewQuestions: SampleInterviewQuestionsPayload
}

export enum SubscriptionPlanEnum {
  Free = 'FREE',
  Pro = 'PRO',
  ProQuarterly = 'PRO_QUARTERLY',
}

export type Users = {
  __typename?: 'Users'
  activeResumes?: Maybe<Array<Resumes>>
  advisor?: Maybe<Users>
  completedAllChecklistItems: Scalars['Boolean']['output']
  email: Scalars['String']['output']
  firstName?: Maybe<Scalars['String']['output']>
  hasSubscription: Scalars['Boolean']['output']
  id: Scalars['ID']['output']
  isAdvisoryClient: Scalars['Boolean']['output']
  isAdvisoryOrgAccount: Scalars['Boolean']['output']
  lastActiveAt?: Maybe<Scalars['ISO8601DateTime']['output']>
  lastJobUpdatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>
  lastName?: Maybe<Scalars['String']['output']>
  linkedinUrl?: Maybe<Scalars['String']['output']>
  location?: Maybe<Scalars['String']['output']>
  numClients: Scalars['Int']['output']
  numJobs: Scalars['Int']['output']
  numOwnClients: Scalars['Int']['output']
  numStartedInterviews: Scalars['Int']['output']
  numUploadedResumes: Scalars['Int']['output']
  phoneNumber?: Maybe<Scalars['String']['output']>
  plan: SubscriptionPlanEnum
  referralTokens: Scalars['Int']['output']
  role: UsersRoleEnum
  tokenAchievements: Scalars['Int']['output']
  tokenCoverLetter: Scalars['Int']['output']
  tokenInterview: Scalars['Int']['output']
  tokenInterviewQuestions: Scalars['Int']['output']
  tokenJobMatch: Scalars['Int']['output']
  tokenLearnSkills: Scalars['Int']['output']
  tokenProfessionalSummary: Scalars['Int']['output']
  tokenSalaryInsights: Scalars['Int']['output']
  uniqueId: Scalars['String']['output']
  usedChromeExtension: Scalars['Boolean']['output']
  usedJobAiFeature: Scalars['Boolean']['output']
  usedResumeAiFeature: Scalars['Boolean']['output']
  usersJobs: Array<UsersJobs>
  verified: Scalars['Boolean']['output']
  website?: Maybe<Scalars['String']['output']>
}

export type UsersInputObject = {
  firstName?: InputMaybe<Scalars['String']['input']>
  lastName?: InputMaybe<Scalars['String']['input']>
  linkedinUrl?: InputMaybe<Scalars['String']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  phoneNumber?: InputMaybe<Scalars['String']['input']>
  website?: InputMaybe<Scalars['String']['input']>
}

export type UsersJobs = {
  __typename?: 'UsersJobs'
  applicationInstructions?: Maybe<Scalars['String']['output']>
  appliedAt?: Maybe<Scalars['ISO8601DateTime']['output']>
  archived: Scalars['Boolean']['output']
  clientsShared: Array<Users>
  companyName: Scalars['String']['output']
  contacts?: Maybe<Array<Contacts>>
  coverLetter?: Maybe<UsersJobsCoverLetterType>
  createdAt: Scalars['ISO8601DateTime']['output']
  id: Scalars['ID']['output']
  interviewStep?: Maybe<UsersJobsInterviewStepEnum>
  interviewedAt?: Maybe<Scalars['ISO8601DateTime']['output']>
  isRemote?: Maybe<Scalars['Boolean']['output']>
  jobDetails?: Maybe<Scalars['String']['output']>
  location?: Maybe<Scalars['String']['output']>
  notes?: Maybe<Scalars['String']['output']>
  numClientsApplied: Scalars['Int']['output']
  numClientsShared: Scalars['Int']['output']
  offerAt?: Maybe<Scalars['ISO8601DateTime']['output']>
  partnerArchived: Scalars['Boolean']['output']
  partnerCreatedByUser?: Maybe<Users>
  payPeriod: UsersJobsPayPeriodEnum
  position: Scalars['String']['output']
  rejectedAt?: Maybe<Scalars['ISO8601DateTime']['output']>
  rejectedStage?: Maybe<UsersJobsRejectedStageEnum>
  resume?: Maybe<Resumes>
  salaryMax?: Maybe<Scalars['Int']['output']>
  salaryMin?: Maybe<Scalars['Int']['output']>
  status: UsersJobsStatusEnum
  updatedAt: Scalars['ISO8601DateTime']['output']
  url?: Maybe<Scalars['String']['output']>
}

export type UsersJobsCoverLetterInputObject = {
  body?: InputMaybe<Scalars['String']['input']>
  candidateAddress?: InputMaybe<Scalars['String']['input']>
  companyLocation?: InputMaybe<Scalars['String']['input']>
  companyName?: InputMaybe<Scalars['String']['input']>
  email?: InputMaybe<Scalars['String']['input']>
  firstName?: InputMaybe<Scalars['String']['input']>
  footer?: InputMaybe<Scalars['String']['input']>
  lastName?: InputMaybe<Scalars['String']['input']>
  phoneNumber?: InputMaybe<Scalars['String']['input']>
}

export type UsersJobsCoverLetterType = {
  __typename?: 'UsersJobsCoverLetterType'
  archived: Scalars['Boolean']['output']
  body?: Maybe<Scalars['String']['output']>
  candidateAddress?: Maybe<Scalars['String']['output']>
  companyLocation?: Maybe<Scalars['String']['output']>
  companyName?: Maybe<Scalars['String']['output']>
  createdAt: Scalars['ISO8601DateTime']['output']
  email?: Maybe<Scalars['String']['output']>
  firstName?: Maybe<Scalars['String']['output']>
  footer?: Maybe<Scalars['String']['output']>
  id: Scalars['ID']['output']
  lastName?: Maybe<Scalars['String']['output']>
  mostRecentUsedResumeForGenerate?: Maybe<Resumes>
  phoneNumber?: Maybe<Scalars['String']['output']>
  usersJob: UsersJobs
}

export enum UsersJobsInterviewStepEnum {
  IntroScreen = 'INTRO_SCREEN',
  Onsite = 'ONSITE',
  PhoneScreen = 'PHONE_SCREEN',
}

export type UsersJobsMatch = {
  __typename?: 'UsersJobsMatch'
  hardSkills: Array<Scalars['String']['output']>
  matchLevel: UsersJobsMatchEnum
  matches: Array<FieldMessageType>
}

export enum UsersJobsMatchEnum {
  High = 'HIGH',
  Low = 'LOW',
  Medium = 'MEDIUM',
}

export enum UsersJobsPayPeriodEnum {
  Hourly = 'HOURLY',
  Monthly = 'MONTHLY',
  Weekly = 'WEEKLY',
  Yearly = 'YEARLY',
}

export enum UsersJobsRejectedStageEnum {
  Application = 'APPLICATION',
  Interview = 'INTERVIEW',
  Reference = 'REFERENCE',
}

export enum UsersJobsStatusEnum {
  Applied = 'APPLIED',
  Interview = 'INTERVIEW',
  Offer = 'OFFER',
  Rejected = 'REJECTED',
  Wishlist = 'WISHLIST',
}

export enum UsersRoleEnum {
  AccountManager = 'ACCOUNT_MANAGER',
  Admin = 'ADMIN',
  Advisor = 'ADVISOR',
  Jobseeker = 'JOBSEEKER',
}

export type AdvisorsList_AdvisorsQueryVariables = Exact<{
  page?: InputMaybe<Scalars['Int']['input']>
  perPage?: InputMaybe<Scalars['Int']['input']>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  fromDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  toDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  role?: InputMaybe<UsersRoleEnum>
  sortBy?: InputMaybe<AdvisorSortEnum>
  sortByDirection?: InputMaybe<SortByDirectionEnum>
}>

export type AdvisorsList_AdvisorsQuery = {
  __typename?: 'Query'
  advisors: {
    __typename?: 'PaginatedAdvisorUsers'
    pagination: { __typename?: 'Pagination'; page: number; totalPages: number }
    data: Array<{
      __typename?: 'AdvisorUsers'
      id: string
      jobsShared: Array<{
        __typename?: 'UsersJobs'
        id: string
        applicationInstructions?: string | null
        createdAt: any
        companyName: string
        isRemote?: boolean | null
        jobDetails?: string | null
        location?: string | null
        notes?: string | null
        payPeriod: UsersJobsPayPeriodEnum
        position: string
        salaryMax?: number | null
        salaryMin?: number | null
        status: UsersJobsStatusEnum
        updatedAt: any
        url?: string | null
        archived: boolean
        rejectedStage?: UsersJobsRejectedStageEnum | null
        interviewStep?: UsersJobsInterviewStepEnum | null
        numClientsApplied: number
        numClientsShared: number
        partnerArchived: boolean
        partnerCreatedByUser?: {
          __typename?: 'Users'
          id: string
          firstName?: string | null
          lastName?: string | null
        } | null
        contacts?: Array<{
          __typename?: 'Contacts'
          id: string
          email?: string | null
          name?: string | null
        }> | null
        resume?: { __typename?: 'Resumes'; id: string; name: string } | null
      }>
      jobsAdded: Array<{
        __typename?: 'UsersJobs'
        id: string
        applicationInstructions?: string | null
        createdAt: any
        companyName: string
        isRemote?: boolean | null
        jobDetails?: string | null
        location?: string | null
        notes?: string | null
        payPeriod: UsersJobsPayPeriodEnum
        position: string
        salaryMax?: number | null
        salaryMin?: number | null
        status: UsersJobsStatusEnum
        updatedAt: any
        url?: string | null
        archived: boolean
        rejectedStage?: UsersJobsRejectedStageEnum | null
        interviewStep?: UsersJobsInterviewStepEnum | null
        numClientsApplied: number
        numClientsShared: number
        partnerArchived: boolean
        partnerCreatedByUser?: {
          __typename?: 'Users'
          id: string
          firstName?: string | null
          lastName?: string | null
        } | null
        contacts?: Array<{
          __typename?: 'Contacts'
          id: string
          email?: string | null
          name?: string | null
        }> | null
        resume?: { __typename?: 'Resumes'; id: string; name: string } | null
      }>
      user: {
        __typename?: 'Users'
        id: string
        numOwnClients: number
        uniqueId: string
        role: UsersRoleEnum
        email: string
        firstName?: string | null
        lastName?: string | null
        plan: SubscriptionPlanEnum
        tokenCoverLetter: number
        tokenInterviewQuestions: number
        tokenJobMatch: number
        tokenProfessionalSummary: number
        tokenSalaryInsights: number
        tokenLearnSkills: number
        tokenAchievements: number
        tokenInterview: number
        usedChromeExtension: boolean
        numUploadedResumes: number
        numStartedInterviews: number
        referralTokens: number
        hasSubscription: boolean
        isAdvisoryClient: boolean
        isAdvisoryOrgAccount: boolean
      }
    }>
  }
}

export type ClientGroupClientContent_ClientGroupsQueryVariables = Exact<{
  clientGroupId: Scalars['ID']['input']
}>

export type ClientGroupClientContent_ClientGroupsQuery = {
  __typename?: 'Query'
  clientGroups: Array<{ __typename?: 'ClientGroup'; id: string; name: string }>
}

export type ClientGroupClientList_ClientGroupsQueryVariables = Exact<{
  clientGroupIds: Array<Scalars['ID']['input']> | Scalars['ID']['input']
}>

export type ClientGroupClientList_ClientGroupsQuery = {
  __typename?: 'Query'
  clientGroups: Array<{
    __typename?: 'ClientGroup'
    id: string
    name: string
    clients: Array<{
      __typename?: 'ClientUsers'
      id: string
      numAllJobs: number
      numInterviewedJobs: number
      numOfferedJobs: number
      numRejectedJobs: number
      numAppliedJobs: number
      user: {
        __typename?: 'Users'
        firstName?: string | null
        lastName?: string | null
        lastActiveAt?: any | null
        advisor?: {
          __typename?: 'Users'
          firstName?: string | null
          lastName?: string | null
        } | null
      }
    }>
  }>
}

export type ClientBoard_ClientUsersJobsQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
  clientId: Scalars['ID']['input']
}>

export type ClientBoard_ClientUsersJobsQuery = {
  __typename?: 'Query'
  clientUsersJobs: Array<{
    __typename?: 'UsersJobs'
    id: string
    applicationInstructions?: string | null
    createdAt: any
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    rejectedStage?: UsersJobsRejectedStageEnum | null
    interviewStep?: UsersJobsInterviewStepEnum | null
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }>
}

export type ClientContent_ClientQueryVariables = Exact<{
  clientId: Scalars['ID']['input']
}>

export type ClientContent_ClientQuery = {
  __typename?: 'Query'
  client: {
    __typename?: 'Users'
    id: string
    email: string
    firstName?: string | null
    lastName?: string | null
    lastActiveAt?: any | null
    usersJobs: Array<{ __typename?: 'UsersJobs'; id: string; archived: boolean }>
    activeResumes?: Array<{ __typename?: 'Resumes'; id: string }> | null
  }
}

export type ClientResumes_ClientQueryVariables = Exact<{
  clientId: Scalars['ID']['input']
}>

export type ClientResumes_ClientQuery = {
  __typename?: 'Query'
  client: {
    __typename?: 'Users'
    id: string
    activeResumes?: Array<{
      __typename?: 'Resumes'
      id: string
      name: string
      createdAt: any
      updatedAt: any
    }> | null
  }
}

export type ClientsList_ClientsQueryVariables = Exact<{
  page?: InputMaybe<Scalars['Int']['input']>
  perPage?: InputMaybe<Scalars['Int']['input']>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  fromDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  toDate?: InputMaybe<Scalars['ISO8601DateTime']['input']>
  advisorIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
}>

export type ClientsList_ClientsQuery = {
  __typename?: 'Query'
  clients: {
    __typename?: 'PaginatedClientUsers'
    pagination: { __typename?: 'Pagination'; page: number; totalPages: number }
    data: Array<{
      __typename?: 'ClientUsers'
      id: string
      numAllJobs: number
      numAppliedJobs: number
      numInterviewedJobs: number
      numOfferedJobs: number
      numRejectedJobs: number
      user: {
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
        lastActiveAt?: any | null
        advisor?: {
          __typename?: 'Users'
          id: string
          firstName?: string | null
          lastName?: string | null
        } | null
      }
    }>
  }
}

export type JobPostingsList_JobPostingsQueryVariables = Exact<{
  page?: InputMaybe<Scalars['Int']['input']>
  perPage?: InputMaybe<Scalars['Int']['input']>
  searchTerm?: InputMaybe<Scalars['String']['input']>
  archived?: InputMaybe<Scalars['Boolean']['input']>
  sortBy?: InputMaybe<JobPostingSortEnum>
  sortByDirection?: InputMaybe<SortByDirectionEnum>
}>

export type JobPostingsList_JobPostingsQuery = {
  __typename?: 'Query'
  paginatedUsersJobs: {
    __typename?: 'PaginatedUsersJobs'
    pagination: { __typename?: 'Pagination'; page: number; totalPages: number }
    data: Array<{
      __typename?: 'UsersJobs'
      id: string
      archived: boolean
      companyName: string
      createdAt: any
      numClientsApplied: number
      numClientsShared: number
      position: string
      location?: string | null
      isRemote?: boolean | null
      url?: string | null
      payPeriod: UsersJobsPayPeriodEnum
      salaryMin?: number | null
      salaryMax?: number | null
      clientsShared: Array<{
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
      }>
    }>
  }
}

export type JobPostingsList_UpdateUsersJobArchivedMutationVariables = Exact<{
  id: Scalars['ID']['input']
  archived?: InputMaybe<Scalars['Boolean']['input']>
}>

export type JobPostingsList_UpdateUsersJobArchivedMutation = {
  __typename?: 'Mutation'
  updateUsersJob: { __typename?: 'UsersJobs'; id: string; archived: boolean }
}

export type UserJobsActivityFragment = {
  __typename?: 'UsersJobs'
  id: string
  interviewStep?: UsersJobsInterviewStepEnum | null
  interviewedAt?: any | null
  createdAt: any
  appliedAt?: any | null
  offerAt?: any | null
  rejectedAt?: any | null
  rejectedStage?: UsersJobsRejectedStageEnum | null
}

export type LearnSkills_LearnSkillsMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
}>

export type LearnSkills_LearnSkillsMutation = {
  __typename?: 'Mutation'
  learnSkills: { __typename?: 'CachedStreamingType'; result: string; isSync: boolean }
}

export type LearnSkillsSubscriptionSubscriptionVariables = Exact<{ [key: string]: never }>

export type LearnSkillsSubscriptionSubscription = {
  __typename?: 'Subscription'
  learnSkills: {
    __typename?: 'LearnSkillsPayload'
    content: string
    usersJobId: string
    initial: boolean
    requestId: string
    i?: number | null
  }
}

export type MatchScore_ResumesQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
}>

export type MatchScore_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{
    __typename?: 'Resumes'
    id: string
    name: string
    groupedSkills: Array<{ __typename?: 'ResumesGroupedSkill'; skills: Array<string> }>
  }>
}

export type MatchScore_MatchScoreMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
  resumeId: Scalars['ID']['input']
}>

export type MatchScore_MatchScoreMutation = {
  __typename?: 'Mutation'
  matchScore: {
    __typename?: 'UsersJobsMatch'
    matchLevel: UsersJobsMatchEnum
    hardSkills: Array<string>
    matches: Array<{ __typename?: 'FieldMessageType'; field: string; errorMessage?: string | null }>
  }
}

export type SalaryInsights_SalaryInsightsMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
}>

export type SalaryInsights_SalaryInsightsMutation = {
  __typename?: 'Mutation'
  salaryInsights: string
}

export type ApplicationContent_UsersJobsQueryVariables = Exact<{
  usersJobIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
}>

export type ApplicationContent_UsersJobsQuery = {
  __typename?: 'Query'
  usersJobs: Array<{
    __typename?: 'UsersJobs'
    id: string
    interviewStep?: UsersJobsInterviewStepEnum | null
    interviewedAt?: any | null
    createdAt: any
    appliedAt?: any | null
    offerAt?: any | null
    rejectedAt?: any | null
    rejectedStage?: UsersJobsRejectedStageEnum | null
    applicationInstructions?: string | null
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }>
  user: {
    __typename?: 'Users'
    id: string
    tokenSalaryInsights: number
    tokenJobMatch: number
    tokenLearnSkills: number
    tokenAchievements: number
    plan: SubscriptionPlanEnum
  }
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type ApplicationContent_UpdateUsersJobMutationVariables = Exact<{
  applicationInstructions?: InputMaybe<Scalars['String']['input']>
  companyName?: InputMaybe<Scalars['String']['input']>
  id: Scalars['ID']['input']
  isRemote?: InputMaybe<Scalars['Boolean']['input']>
  jobDetails?: InputMaybe<Scalars['String']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  notes?: InputMaybe<Scalars['String']['input']>
  payPeriod?: InputMaybe<UsersJobsPayPeriodEnum>
  position?: InputMaybe<Scalars['String']['input']>
  salaryMax?: InputMaybe<Scalars['Int']['input']>
  salaryMin?: InputMaybe<Scalars['Int']['input']>
  status?: InputMaybe<UsersJobsStatusEnum>
  rejectedStage?: InputMaybe<UsersJobsRejectedStageEnum>
  interviewStep?: InputMaybe<UsersJobsInterviewStepEnum>
  url?: InputMaybe<Scalars['String']['input']>
  resumeId?: InputMaybe<Scalars['ID']['input']>
}>

export type ApplicationContent_UpdateUsersJobMutation = {
  __typename?: 'Mutation'
  updateUsersJob: {
    __typename?: 'UsersJobs'
    id: string
    interviewStep?: UsersJobsInterviewStepEnum | null
    interviewedAt?: any | null
    createdAt: any
    appliedAt?: any | null
    offerAt?: any | null
    rejectedAt?: any | null
    rejectedStage?: UsersJobsRejectedStageEnum | null
    applicationInstructions?: string | null
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }
}

export type Applications_UsersJobsQueryVariables = Exact<{
  archived: Scalars['Boolean']['input']
}>

export type Applications_UsersJobsQuery = {
  __typename?: 'Query'
  usersJobs: Array<{
    __typename?: 'UsersJobs'
    id: string
    applicationInstructions?: string | null
    createdAt: any
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    rejectedStage?: UsersJobsRejectedStageEnum | null
    interviewStep?: UsersJobsInterviewStepEnum | null
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }>
}

export type Applications_UpdateUsersJobStatusMutationVariables = Exact<{
  id: Scalars['ID']['input']
  status: UsersJobsStatusEnum
}>

export type Applications_UpdateUsersJobStatusMutation = {
  __typename?: 'Mutation'
  updateUsersJob: {
    __typename: 'UsersJobs'
    id: string
    applicationInstructions?: string | null
    createdAt: any
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    rejectedStage?: UsersJobsRejectedStageEnum | null
    interviewStep?: UsersJobsInterviewStepEnum | null
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }
}

export type Applications_UpdateUsersJobMutationVariables = Exact<{
  id: Scalars['ID']['input']
  archived?: InputMaybe<Scalars['Boolean']['input']>
  status?: InputMaybe<UsersJobsStatusEnum>
}>

export type Applications_UpdateUsersJobMutation = {
  __typename?: 'Mutation'
  updateUsersJob: {
    __typename: 'UsersJobs'
    id: string
    applicationInstructions?: string | null
    createdAt: any
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    rejectedStage?: UsersJobsRejectedStageEnum | null
    interviewStep?: UsersJobsInterviewStepEnum | null
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }
}

export type CoverLetterFragment = {
  __typename?: 'UsersJobsCoverLetterType'
  id: string
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  candidateAddress?: string | null
  companyName?: string | null
  companyLocation?: string | null
  phoneNumber?: string | null
  body?: string | null
  footer?: string | null
  archived: boolean
  mostRecentUsedResumeForGenerate?: { __typename?: 'Resumes'; id: string } | null
}

export type CoverLetterContent_CoverLettersQueryVariables = Exact<{
  coverLetterId: Scalars['ID']['input']
}>

export type CoverLetterContent_CoverLettersQuery = {
  __typename?: 'Query'
  coverLetters: Array<{
    __typename?: 'UsersJobsCoverLetterType'
    id: string
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    candidateAddress?: string | null
    companyName?: string | null
    companyLocation?: string | null
    phoneNumber?: string | null
    body?: string | null
    footer?: string | null
    archived: boolean
    usersJob: {
      __typename?: 'UsersJobs'
      id: string
      applicationInstructions?: string | null
      createdAt: any
      companyName: string
      isRemote?: boolean | null
      jobDetails?: string | null
      location?: string | null
      notes?: string | null
      payPeriod: UsersJobsPayPeriodEnum
      position: string
      salaryMax?: number | null
      salaryMin?: number | null
      status: UsersJobsStatusEnum
      updatedAt: any
      url?: string | null
      archived: boolean
      rejectedStage?: UsersJobsRejectedStageEnum | null
      interviewStep?: UsersJobsInterviewStepEnum | null
      numClientsApplied: number
      numClientsShared: number
      partnerArchived: boolean
      partnerCreatedByUser?: {
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
      } | null
      contacts?: Array<{
        __typename?: 'Contacts'
        id: string
        email?: string | null
        name?: string | null
      }> | null
      resume?: { __typename?: 'Resumes'; id: string; name: string } | null
    }
    mostRecentUsedResumeForGenerate?: { __typename?: 'Resumes'; id: string } | null
  }>
}

export type CoverLettercontent_ResumesQueryVariables = Exact<{ [key: string]: never }>

export type CoverLettercontent_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type CoverLetterContent_GenerateCoverLetterMutationVariables = Exact<{
  coverLetterLength?: InputMaybe<CoverLetterLengthEnum>
  coverLetterTone?: InputMaybe<CoverLetterToneEnum>
  resumeId: Scalars['ID']['input']
  usersJobId: Scalars['ID']['input']
}>

export type CoverLetterContent_GenerateCoverLetterMutation = {
  __typename?: 'Mutation'
  generateCoverLetter: { __typename?: 'UsersJobsCoverLetterType'; id: string; body?: string | null }
}

export type CoverLetterContent_CoverLetterUpsertMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
  attributes: UsersJobsCoverLetterInputObject
}>

export type CoverLetterContent_CoverLetterUpsertMutation = {
  __typename?: 'Mutation'
  coverLetterUpsert: {
    __typename?: 'UsersJobsCoverLetterType'
    id: string
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    candidateAddress?: string | null
    companyName?: string | null
    companyLocation?: string | null
    phoneNumber?: string | null
    body?: string | null
    footer?: string | null
    archived: boolean
    mostRecentUsedResumeForGenerate?: { __typename?: 'Resumes'; id: string } | null
  }
}

export type CoverLettersList_CoverLettersQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
}>

export type CoverLettersList_CoverLettersQuery = {
  __typename?: 'Query'
  coverLetters: Array<{
    __typename?: 'UsersJobsCoverLetterType'
    id: string
    body?: string | null
    createdAt: any
    usersJob: { __typename?: 'UsersJobs'; id: string; companyName: string; position: string }
  }>
}

export type DashboardContent_ItemsDataQueryVariables = Exact<{ [key: string]: never }>

export type DashboardContent_ItemsDataQuery = {
  __typename?: 'Query'
  user: {
    __typename?: 'Users'
    id: string
    numJobs: number
    usedJobAiFeature: boolean
    usedResumeAiFeature: boolean
    usedChromeExtension: boolean
  }
  resumes: Array<{
    __typename?: 'Resumes'
    id: string
    simpleAnalysis: Array<{ __typename?: 'FieldMessageType'; errorMessage?: string | null }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      simpleAnalysis: Array<{ __typename?: 'FieldMessageType'; errorMessage?: string | null }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        simpleAnalysis: Array<{ __typename?: 'FieldMessageType'; errorMessage?: string | null }>
      }>
    }>
  }>
}

export type Interview_GetInterviewQueryVariables = Exact<{
  interviewId?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
}>

export type Interview_GetInterviewQuery = {
  __typename?: 'Query'
  interviews: Array<{
    __typename?: 'Interview'
    id: string
    status: InterviewsStatusEnum
    interviewType: InterviewsTypeEnum
    score?: number | null
    jobTitle: string
    messages: Array<{ __typename?: 'InterviewsMessage'; fromUser: boolean; message: string }>
  }>
}

export type InterviewsSidebar_InterviewsQueryVariables = Exact<{ [key: string]: never }>

export type InterviewsSidebar_InterviewsQuery = {
  __typename?: 'Query'
  interviews: Array<{
    __typename?: 'Interview'
    id: string
    status: InterviewsStatusEnum
    interviewType: InterviewsTypeEnum
    score?: number | null
    jobTitle: string
  }>
}

export type Interviews_InterviewFragment = {
  __typename?: 'Interview'
  id: string
  status: InterviewsStatusEnum
  interviewType: InterviewsTypeEnum
  score?: number | null
  jobTitle: string
  messages: Array<{ __typename?: 'InterviewsMessage'; fromUser: boolean; message: string }>
}

export type Interviews_InterviewsQueryVariables = Exact<{ [key: string]: never }>

export type Interviews_InterviewsQuery = {
  __typename?: 'Query'
  interviews: Array<{
    __typename?: 'Interview'
    id: string
    status: InterviewsStatusEnum
    interviewType: InterviewsTypeEnum
    score?: number | null
    jobTitle: string
  }>
}

export type Interviews_InterviewAddMessageMutationVariables = Exact<{
  interviewId: Scalars['String']['input']
  message: Scalars['String']['input']
}>

export type Interviews_InterviewAddMessageMutation = {
  __typename?: 'Mutation'
  interviewAddMessage: {
    __typename?: 'Interview'
    id: string
    status: InterviewsStatusEnum
    interviewType: InterviewsTypeEnum
    score?: number | null
    jobTitle: string
    messages: Array<{ __typename?: 'InterviewsMessage'; fromUser: boolean; message: string }>
  }
}

export type ListEmpty_CreateResumeMutationVariables = Exact<{
  name: Scalars['String']['input']
}>

export type ListEmpty_CreateResumeMutation = {
  __typename?: 'Mutation'
  createResume: { __typename?: 'Resumes'; id: string; name: string }
}

export type ResumesList_ResumesFragment = {
  __typename?: 'Resumes'
  id: string
  name: string
  archived: boolean
  createdAt: any
  updatedAt: any
  aiGenerated: boolean
}

export type ResumesList_AllResumesQueryVariables = Exact<{ [key: string]: never }>

export type ResumesList_AllResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type ResumesList_ResumesQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
  aiGenerated?: InputMaybe<Scalars['Boolean']['input']>
}>

export type ResumesList_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{
    __typename?: 'Resumes'
    id: string
    name: string
    archived: boolean
    createdAt: any
    updatedAt: any
    aiGenerated: boolean
  }>
}

export type ResumeList_UpdateArchivedResumeMutationVariables = Exact<{
  id: Scalars['ID']['input']
  archived: Scalars['Boolean']['input']
}>

export type ResumeList_UpdateArchivedResumeMutation = {
  __typename?: 'Mutation'
  updateArchivedResume: {
    __typename?: 'Resumes'
    id: string
    name: string
    archived: boolean
    createdAt: any
    updatedAt: any
    aiGenerated: boolean
  }
}

export type ResumeList_DuplicateResumeMutationVariables = Exact<{
  id: Scalars['ID']['input']
}>

export type ResumeList_DuplicateResumeMutation = {
  __typename?: 'Mutation'
  duplicateResume: {
    __typename?: 'Resumes'
    id: string
    name: string
    archived: boolean
    createdAt: any
    updatedAt: any
    aiGenerated: boolean
  }
}

export type ForgotPassword_AuthPasswordResetRequestMutationVariables = Exact<{
  email: Scalars['String']['input']
}>

export type ForgotPassword_AuthPasswordResetRequestMutation = {
  __typename?: 'Mutation'
  authPasswordResetRequest: string
}

export type ResetPassword_ResetPasswordAllowedQueryVariables = Exact<{
  resetPasswordToken: Scalars['String']['input']
}>

export type ResetPassword_ResetPasswordAllowedQuery = {
  __typename?: 'Query'
  resetPasswordAllowed: boolean
}

export type ResetPassword_ResetPasswordMutationVariables = Exact<{
  resetPasswordToken: Scalars['String']['input']
  newPassword: Scalars['String']['input']
}>

export type ResetPassword_ResetPasswordMutation = {
  __typename?: 'Mutation'
  authResetPassword: string
}

export type EmailVerify_EmailVerifyAllowedQueryVariables = Exact<{
  emailVerificationCode: Scalars['String']['input']
}>

export type EmailVerify_EmailVerifyAllowedQuery = {
  __typename?: 'Query'
  emailVerifyAllowed?: {
    __typename?: 'Users'
    firstName?: string | null
    lastName?: string | null
    email: string
  } | null
}

export type ApplicationSelect_UsersJobsFragment = {
  __typename?: 'UsersJobs'
  id: string
  companyName: string
  position: string
  jobDetails?: string | null
}

export type ApplicationSelect_UsersJobsQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
}>

export type ApplicationSelect_UsersJobsQuery = {
  __typename?: 'Query'
  usersJobs: Array<{
    __typename?: 'UsersJobs'
    id: string
    companyName: string
    position: string
    jobDetails?: string | null
  }>
}

export type Feedback_FeedbackCreateMutationVariables = Exact<{
  subject?: InputMaybe<Scalars['String']['input']>
  feedback: Scalars['String']['input']
}>

export type Feedback_FeedbackCreateMutation = { __typename?: 'Mutation'; createFeedback: string }

export type Navigation_ItemsDataQueryVariables = Exact<{ [key: string]: never }>

export type Navigation_ItemsDataQuery = {
  __typename?: 'Query'
  user: {
    __typename?: 'Users'
    id: string
    numJobs: number
    usedJobAiFeature: boolean
    usedResumeAiFeature: boolean
    usedChromeExtension: boolean
  }
  resumes: Array<{
    __typename?: 'Resumes'
    id: string
    simpleAnalysis: Array<{ __typename?: 'FieldMessageType'; errorMessage?: string | null }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      simpleAnalysis: Array<{ __typename?: 'FieldMessageType'; errorMessage?: string | null }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        simpleAnalysis: Array<{ __typename?: 'FieldMessageType'; errorMessage?: string | null }>
      }>
    }>
  }>
}

export type Navigation_ClientGroupsQueryVariables = Exact<{ [key: string]: never }>

export type Navigation_ClientGroupsQuery = {
  __typename?: 'Query'
  clientGroups: Array<{ __typename?: 'ClientGroup'; id: string; name: string }>
}

export type ResumesSelect_ResumesQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
  optimized?: InputMaybe<Scalars['Boolean']['input']>
}>

export type ResumesSelect_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type UpdateLastPageLoaded_UpdateLastPageLoadedAtMutationVariables = Exact<{
  [key: string]: never
}>

export type UpdateLastPageLoaded_UpdateLastPageLoadedAtMutation = {
  __typename?: 'Mutation'
  updateLastPageLoadedAt: { __typename?: 'Users'; id: string }
}

export type UsersUpdateFragment = {
  __typename?: 'Users'
  id: string
  firstName?: string | null
  lastName?: string | null
  phoneNumber?: string | null
  location?: string | null
  website?: string | null
  linkedinUrl?: string | null
}

export type AccountSettingsDialog_UserQueryVariables = Exact<{ [key: string]: never }>

export type AccountSettingsDialog_UserQuery = {
  __typename?: 'Query'
  user: {
    __typename?: 'Users'
    id: string
    firstName?: string | null
    lastName?: string | null
    phoneNumber?: string | null
    location?: string | null
    website?: string | null
    linkedinUrl?: string | null
  }
}

export type AccountSettingsDialog_UpdateUserMutationVariables = Exact<{
  attributes: UsersInputObject
}>

export type AccountSettingsDialog_UpdateUserMutation = {
  __typename?: 'Mutation'
  updateUser: {
    __typename?: 'Users'
    id: string
    firstName?: string | null
    lastName?: string | null
    phoneNumber?: string | null
    location?: string | null
    website?: string | null
    linkedinUrl?: string | null
  }
}

export type CreateClientGroupDialog_ClientGroupFragment = {
  __typename?: 'ClientGroup'
  id: string
  clients: Array<{ __typename?: 'ClientUsers'; id: string }>
}

export type CreateClientGroupDialog_CreateClientGroupMutationVariables = Exact<{
  name: Scalars['String']['input']
}>

export type CreateClientGroupDialog_CreateClientGroupMutation = {
  __typename?: 'Mutation'
  createClientGroup: {
    __typename?: 'ClientGroup'
    id: string
    clients: Array<{ __typename?: 'ClientUsers'; id: string }>
  }
}

export type CreateClientGroupDialog_AddUsersToClientGroupMutationVariables = Exact<{
  clientGroupId: Scalars['ID']['input']
  userIds: Array<Scalars['ID']['input']> | Scalars['ID']['input']
}>

export type CreateClientGroupDialog_AddUsersToClientGroupMutation = {
  __typename?: 'Mutation'
  addUsersToClientGroup: {
    __typename?: 'ClientGroup'
    id: string
    clients: Array<{ __typename?: 'ClientUsers'; id: string }>
  }
}

export type CreateClientGroupDialog_ClientsQueryVariables = Exact<{ [key: string]: never }>

export type CreateClientGroupDialog_ClientsQuery = {
  __typename?: 'Query'
  clients: {
    __typename?: 'PaginatedClientUsers'
    data: Array<{
      __typename?: 'ClientUsers'
      id: string
      user: { __typename?: 'Users'; firstName?: string | null; lastName?: string | null }
    }>
  }
}

export type EditClientGroupDialog_ClientGroupsQueryVariables = Exact<{
  clientGroupId: Scalars['ID']['input']
}>

export type EditClientGroupDialog_ClientGroupsQuery = {
  __typename?: 'Query'
  clientGroups: Array<{
    __typename?: 'ClientGroup'
    id: string
    name: string
    clients: Array<{
      __typename?: 'ClientUsers'
      id: string
      user: {
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
      }
    }>
  }>
}

export type EditClientGroupDialog_ClientsQueryVariables = Exact<{ [key: string]: never }>

export type EditClientGroupDialog_ClientsQuery = {
  __typename?: 'Query'
  clients: {
    __typename?: 'PaginatedClientUsers'
    pagination: { __typename?: 'Pagination'; page: number; pageSize: number }
    data: Array<{
      __typename?: 'ClientUsers'
      id: string
      user: {
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
      }
    }>
  }
}

export type EditClientGroupDialog_EditClientGroupMutationVariables = Exact<{
  clientGroupId: Scalars['ID']['input']
  userIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
  name?: InputMaybe<Scalars['String']['input']>
}>

export type EditClientGroupDialog_EditClientGroupMutation = {
  __typename?: 'Mutation'
  editClientGroup: { __typename?: 'ClientGroup'; id: string }
}

export type EnhanceAchievementDialog_GenerateOneJobAchievementMutationVariables = Exact<{
  workPositionId: Scalars['ID']['input']
  index: Scalars['Int']['input']
  keywords?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>
}>

export type EnhanceAchievementDialog_GenerateOneJobAchievementMutation = {
  __typename?: 'Mutation'
  generateOneJobAchievement: string
}

export type EnhanceSummaryDialog_GenerateProfessionalSummaryMutationVariables = Exact<{
  resumeId: Scalars['ID']['input']
  useExisting: Scalars['Boolean']['input']
  keywords?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>
}>

export type EnhanceSummaryDialog_GenerateProfessionalSummaryMutation = {
  __typename?: 'Mutation'
  generateProfessionalSummary: string
}

export type FeedbackDialog_CreateFeedbackMutationVariables = Exact<{
  subject?: InputMaybe<Scalars['String']['input']>
  feedback: Scalars['String']['input']
}>

export type FeedbackDialog_CreateFeedbackMutation = {
  __typename?: 'Mutation'
  createFeedback: string
}

export type ImportResumeFromLinkedinDialog_ResumesQueryVariables = Exact<{ [key: string]: never }>

export type ImportResumeFromLinkedinDialog_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type ImportResumeFromLinkedinDialog_CreateResumeFromLinkedinUrlMutationVariables = Exact<{
  linkedinProfileUrl: Scalars['String']['input']
}>

export type ImportResumeFromLinkedinDialog_CreateResumeFromLinkedinUrlMutation = {
  __typename?: 'Mutation'
  createResumeFromLinkedinUrl: { __typename?: 'Resumes'; id: string }
}

export type NewApplicationDialog_ResumesQueryVariables = Exact<{ [key: string]: never }>

export type NewApplicationDialog_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type NewApplicationDialog_CreateUsersJobMutationVariables = Exact<{
  applicationInstructions?: InputMaybe<Scalars['String']['input']>
  contact?: InputMaybe<ContactsInputObject>
  isRemote?: InputMaybe<Scalars['Boolean']['input']>
  jobDetails?: InputMaybe<Scalars['String']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  notes?: InputMaybe<Scalars['String']['input']>
  payPeriod?: InputMaybe<UsersJobsPayPeriodEnum>
  position: Scalars['String']['input']
  salaryMax?: InputMaybe<Scalars['Int']['input']>
  salaryMin?: InputMaybe<Scalars['Int']['input']>
  status?: InputMaybe<UsersJobsStatusEnum>
  rejectedStage?: InputMaybe<UsersJobsRejectedStageEnum>
  interviewStep?: InputMaybe<UsersJobsInterviewStepEnum>
  companyName: Scalars['String']['input']
  url?: InputMaybe<Scalars['String']['input']>
  resumeId?: InputMaybe<Scalars['ID']['input']>
}>

export type NewApplicationDialog_CreateUsersJobMutation = {
  __typename?: 'Mutation'
  createUsersJob: { __typename?: 'UsersJobs'; id: string; status: UsersJobsStatusEnum }
}

export type NewApplicationsDialog_UsersJobsQueryVariables = Exact<{
  id: Scalars['ID']['input']
}>

export type NewApplicationsDialog_UsersJobsQuery = {
  __typename?: 'Query'
  usersJobs: Array<{
    __typename?: 'UsersJobs'
    id: string
    status: UsersJobsStatusEnum
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    companyName: string
    url?: string | null
    rejectedStage?: UsersJobsRejectedStageEnum | null
    interviewStep?: UsersJobsInterviewStepEnum | null
    payPeriod: UsersJobsPayPeriodEnum
    applicationInstructions?: string | null
  }>
}

export type NewApplicationsDialog_UpdateUsersJobMutationVariables = Exact<{
  id: Scalars['ID']['input']
  isRemote?: InputMaybe<Scalars['Boolean']['input']>
  jobDetails?: InputMaybe<Scalars['String']['input']>
  location?: InputMaybe<Scalars['String']['input']>
  notes?: InputMaybe<Scalars['String']['input']>
  position: Scalars['String']['input']
  salaryMax?: InputMaybe<Scalars['Int']['input']>
  salaryMin?: InputMaybe<Scalars['Int']['input']>
  status?: InputMaybe<UsersJobsStatusEnum>
  rejectedStage?: InputMaybe<UsersJobsRejectedStageEnum>
  interviewStep?: InputMaybe<UsersJobsInterviewStepEnum>
  companyName: Scalars['String']['input']
  url?: InputMaybe<Scalars['String']['input']>
  resumeId?: InputMaybe<Scalars['ID']['input']>
  payPeriod?: InputMaybe<UsersJobsPayPeriodEnum>
  applicationInstructions?: InputMaybe<Scalars['String']['input']>
}>

export type NewApplicationsDialog_UpdateUsersJobMutation = {
  __typename?: 'Mutation'
  updateUsersJob: { __typename?: 'UsersJobs'; id: string; status: UsersJobsStatusEnum }
}

export type NewCoverLetterDialog_UsersJobsQueryVariables = Exact<{
  usersJobIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
  archived: Scalars['Boolean']['input']
}>

export type NewCoverLetterDialog_UsersJobsQuery = {
  __typename?: 'Query'
  usersJobs: Array<{
    __typename?: 'UsersJobs'
    id: string
    position: string
    companyName: string
    coverLetter?: { __typename?: 'UsersJobsCoverLetterType'; id: string } | null
  }>
}

export type NewCoverLetterDialog_ResumesQueryVariables = Exact<{ [key: string]: never }>

export type NewCoverLetterDialog_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type NewCoverLetterDialog_CreateUsersJobMutationVariables = Exact<{
  position: Scalars['String']['input']
  status?: InputMaybe<UsersJobsStatusEnum>
  companyName: Scalars['String']['input']
  jobDetails?: InputMaybe<Scalars['String']['input']>
}>

export type NewCoverLetterDialog_CreateUsersJobMutation = {
  __typename?: 'Mutation'
  createUsersJob: {
    __typename?: 'UsersJobs'
    id: string
    applicationInstructions?: string | null
    createdAt: any
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    rejectedStage?: UsersJobsRejectedStageEnum | null
    interviewStep?: UsersJobsInterviewStepEnum | null
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }
}

export type NewCoverLetterDialog_CoverLetterUpsertMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
  attributes: UsersJobsCoverLetterInputObject
}>

export type NewCoverLetterDialog_CoverLetterUpsertMutation = {
  __typename?: 'Mutation'
  coverLetterUpsert: {
    __typename?: 'UsersJobsCoverLetterType'
    id: string
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    candidateAddress?: string | null
    companyName?: string | null
    companyLocation?: string | null
    phoneNumber?: string | null
    body?: string | null
    footer?: string | null
    archived: boolean
    mostRecentUsedResumeForGenerate?: { __typename?: 'Resumes'; id: string } | null
  }
}

export type NewInterviewDialog_ResumeQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
}>

export type NewInterviewDialog_ResumeQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type NewInterviewDialog_InterviewStartMockMutationVariables = Exact<{
  jobTitle: Scalars['String']['input']
  jobDescription?: InputMaybe<Scalars['String']['input']>
  interviewType: InterviewsTypeEnum
  resumeId?: InputMaybe<Scalars['ID']['input']>
}>

export type NewInterviewDialog_InterviewStartMockMutation = {
  __typename?: 'Mutation'
  interviewStartMock: { __typename?: 'Interview'; id: string }
}

export type NewResumeDialog_ResumesQueryVariables = Exact<{ [key: string]: never }>

export type NewResumeDialog_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type RedeemCodeDialog_SubscriptionsRedeemLtdPromoCodeMutationVariables = Exact<{
  promoCode: Scalars['String']['input']
}>

export type RedeemCodeDialog_SubscriptionsRedeemLtdPromoCodeMutation = {
  __typename?: 'Mutation'
  subscriptionsRedeemLtdPromoCode: { __typename?: 'Users'; id: string; plan: SubscriptionPlanEnum }
}

export type ShareJobPostingDialog_UsersJobsQueryVariables = Exact<{
  ids: Array<Scalars['ID']['input']> | Scalars['ID']['input']
}>

export type ShareJobPostingDialog_UsersJobsQuery = {
  __typename?: 'Query'
  usersJobs: Array<{
    __typename?: 'UsersJobs'
    id: string
    position: string
    companyName: string
    clientsShared: Array<{ __typename?: 'Users'; id: string }>
  }>
}

export type ShareJobPostingDialog_ClientsQueryVariables = Exact<{
  searchTerm?: InputMaybe<Scalars['String']['input']>
}>

export type ShareJobPostingDialog_ClientsQuery = {
  __typename?: 'Query'
  clients: {
    __typename?: 'PaginatedClientUsers'
    pagination: { __typename?: 'Pagination'; page: number; totalPages: number }
    data: Array<{
      __typename?: 'ClientUsers'
      id: string
      user: {
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
      }
    }>
  }
}

export type ShareJobPostingDialog_ClientGroupsQueryVariables = Exact<{ [key: string]: never }>

export type ShareJobPostingDialog_ClientGroupsQuery = {
  __typename?: 'Query'
  clientGroups: Array<{ __typename?: 'ClientGroup'; id: string; name: string }>
}

export type ShareJobPostingDialog_ShareJobWithClientsMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
  userIds: Array<Scalars['ID']['input']> | Scalars['ID']['input']
  clientGroupIds: Array<Scalars['ID']['input']> | Scalars['ID']['input']
}>

export type ShareJobPostingDialog_ShareJobWithClientsMutation = {
  __typename?: 'Mutation'
  shareJobWithClients: { __typename?: 'UsersJobs'; id: string }
}

export type TailorResumeDialog_CreateUsersJobMutationVariables = Exact<{
  position: Scalars['String']['input']
  status?: InputMaybe<UsersJobsStatusEnum>
  companyName: Scalars['String']['input']
  jobDetails?: InputMaybe<Scalars['String']['input']>
}>

export type TailorResumeDialog_CreateUsersJobMutation = {
  __typename?: 'Mutation'
  createUsersJob: {
    __typename?: 'UsersJobs'
    id: string
    applicationInstructions?: string | null
    createdAt: any
    companyName: string
    isRemote?: boolean | null
    jobDetails?: string | null
    location?: string | null
    notes?: string | null
    payPeriod: UsersJobsPayPeriodEnum
    position: string
    salaryMax?: number | null
    salaryMin?: number | null
    status: UsersJobsStatusEnum
    updatedAt: any
    url?: string | null
    archived: boolean
    rejectedStage?: UsersJobsRejectedStageEnum | null
    interviewStep?: UsersJobsInterviewStepEnum | null
    numClientsApplied: number
    numClientsShared: number
    partnerArchived: boolean
    partnerCreatedByUser?: {
      __typename?: 'Users'
      id: string
      firstName?: string | null
      lastName?: string | null
    } | null
    contacts?: Array<{
      __typename?: 'Contacts'
      id: string
      email?: string | null
      name?: string | null
    }> | null
    resume?: { __typename?: 'Resumes'; id: string; name: string } | null
  }
}

export type TailorResumeDialog_OptimizeResumeForJobMutationVariables = Exact<{
  keywords?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>
  resumeId: Scalars['ID']['input']
  skills?: InputMaybe<Array<Scalars['String']['input']> | Scalars['String']['input']>
  usersJobId: Scalars['ID']['input']
}>

export type TailorResumeDialog_OptimizeResumeForJobMutation = {
  __typename?: 'Mutation'
  optimizeResumeForJob: {
    __typename?: 'Resumes'
    id: string
    uniqueId?: string | null
    createdAt: any
    updatedAt: any
    name: string
    archived: boolean
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    linkedinUrl?: string | null
    phoneNumber?: string | null
    professionalSummary?: string | null
    website?: string | null
    location?: string | null
    suggestedSkills: Array<string>
    documentUrl?: string | null
    documentType?: ResumeDocumentType | null
    showOriginalDocument: boolean
    hideEducations: boolean
    hideProjects: boolean
    hideSkills: boolean
    hideSummary: boolean
    hideCertifications: boolean
    hideWorkExperiences: boolean
    hideCourseworks: boolean
    hideInvolvements: boolean
    sectionsOrder: Array<ResumeSortableSections>
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
    aiGenerated: boolean
    courseworks: Array<{
      __typename?: 'ResumesCoursework'
      id: string
      name?: string | null
      institutionName?: string | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnCourse: boolean
    }>
    educations: Array<{
      __typename?: 'ResumesEducation'
      id: string
      additionalInformation?: string | null
      degree?: string | null
      endDate?: any | null
      startDate?: any | null
      gpa?: string | null
      institutionName: string
      location?: string | null
      currentlyInEducation: boolean
    }>
    involvements: Array<{
      __typename?: 'ResumesInvolvement'
      id: string
      name?: string | null
      organizationName?: string | null
      startDate?: any | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnInvolvement: boolean
    }>
    projects: Array<{
      __typename?: 'ResumesProject'
      id: string
      achievements: Array<string>
      name: string
      endDate?: any | null
      startDate?: any | null
      currentlyWorkingOnProject: boolean
    }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      id: string
      companyDescription?: string | null
      companyName: string
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        id: string
        achievements: Array<string>
        location?: string | null
        name: string
        startDate?: any | null
        endDate?: any | null
        currentlyInPosition: boolean
        simpleAnalysis: Array<{
          __typename?: 'FieldMessageType'
          field: string
          errorMessage?: string | null
        }>
      }>
    }>
    groupedSkills: Array<{
      __typename?: 'ResumesGroupedSkill'
      id: string
      category?: string | null
      skills: Array<string>
    }>
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    certifications: Array<{
      __typename?: 'ResumesCertification'
      id: string
      name: string
      completionDate?: any | null
      provider?: string | null
    }>
  }
}

export type TailorResumeDialog_FetchJobKeywordsMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
}>

export type TailorResumeDialog_FetchJobKeywordsMutation = {
  __typename?: 'Mutation'
  fetchJobKeywords: Array<string>
}

export type TailorResumeDialog_FetchMissingSkillsOfJobResumeMutationVariables = Exact<{
  usersJobId: Scalars['ID']['input']
  resumeId: Scalars['ID']['input']
}>

export type TailorResumeDialog_FetchMissingSkillsOfJobResumeMutation = {
  __typename?: 'Mutation'
  fetchMissingSkillsOfJobResume: Array<string>
}

export type ResumeTemplateDrawer_UpdateTemplateMutationVariables = Exact<{
  resumeId: Scalars['ID']['input']
  template: ResumesTemplateEnum
  templateColorEnum?: InputMaybe<ResumesTemplateColorEnum>
}>

export type ResumeTemplateDrawer_UpdateTemplateMutation = {
  __typename?: 'Mutation'
  updateTemplateResume: {
    __typename?: 'Resumes'
    id: string
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
  }
}

export type AdvisorSheet_ClientsQueryVariables = Exact<{
  advisorIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
  page: Scalars['Int']['input']
  perPage: Scalars['Int']['input']
}>

export type AdvisorSheet_ClientsQuery = {
  __typename?: 'Query'
  clients: {
    __typename?: 'PaginatedClientUsers'
    pagination: { __typename?: 'Pagination'; page: number; totalPages: number }
    data: Array<{
      __typename?: 'ClientUsers'
      user: {
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
      }
    }>
  }
}

export type AdvisorSheet_AssignClientToAdvisorMutationVariables = Exact<{
  advisorId: Scalars['ID']['input']
  clientIds: Array<Scalars['ID']['input']> | Scalars['ID']['input']
}>

export type AdvisorSheet_AssignClientToAdvisorMutation = {
  __typename?: 'Mutation'
  assignClientToAdvisor: string
}

export type ApplicationToolbar_UsersJobsArchivedQueryVariables = Exact<{
  usersJobIds?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
}>

export type ApplicationToolbar_UsersJobsArchivedQuery = {
  __typename?: 'Query'
  usersJobs: Array<{ __typename?: 'UsersJobs'; id: string; archived: boolean }>
}

export type ApplicationToolbar_UpdateUsersJobArchiveMutationVariables = Exact<{
  id: Scalars['ID']['input']
  archive?: InputMaybe<Scalars['Boolean']['input']>
}>

export type ApplicationToolbar_UpdateUsersJobArchiveMutation = {
  __typename?: 'Mutation'
  updateUsersJob: { __typename?: 'UsersJobs'; id: string; archived: boolean }
}

export type BoardToolbar_UsersJobsQueryVariables = Exact<{ [key: string]: never }>

export type BoardToolbar_UsersJobsQuery = {
  __typename?: 'Query'
  usersJobs: Array<{ __typename?: 'UsersJobs'; id: string }>
}

export type ClientBoardToolbar_ClientQueryVariables = Exact<{
  clientId: Scalars['ID']['input']
}>

export type ClientBoardToolbar_ClientQuery = {
  __typename?: 'Query'
  client: {
    __typename?: 'Users'
    id: string
    firstName?: string | null
    lastName?: string | null
    email: string
  }
}

export type ClientGroupToolbar_ClientGroupQueryVariables = Exact<{
  clientGroupId: Scalars['ID']['input']
}>

export type ClientGroupToolbar_ClientGroupQuery = {
  __typename?: 'Query'
  clientGroups: Array<{ __typename?: 'ClientGroup'; id: string; name: string }>
}

export type ClientResumeToolbar_ClientQueryVariables = Exact<{
  clientId: Scalars['ID']['input']
}>

export type ClientResumeToolbar_ClientQuery = {
  __typename?: 'Query'
  client: {
    __typename?: 'Users'
    id: string
    firstName?: string | null
    lastName?: string | null
    email: string
  }
}

export type ClientToolbar_ClientQueryVariables = Exact<{
  clientId: Scalars['ID']['input']
}>

export type ClientToolbar_ClientQuery = {
  __typename?: 'Query'
  client: {
    __typename?: 'Users'
    id: string
    firstName?: string | null
    lastName?: string | null
    email: string
  }
}

export type ClientsToolbar_AdvisorsQueryVariables = Exact<{ [key: string]: never }>

export type ClientsToolbar_AdvisorsQuery = {
  __typename?: 'Query'
  advisors: {
    __typename?: 'PaginatedAdvisorUsers'
    pagination: { __typename?: 'Pagination'; page: number; totalPages: number }
    data: Array<{
      __typename?: 'AdvisorUsers'
      id: string
      user: {
        __typename?: 'Users'
        id: string
        firstName?: string | null
        lastName?: string | null
      }
    }>
  }
}

export type CoverLetterToolbar_CoverLettersQueryVariables = Exact<{
  coverLetterId: Scalars['ID']['input']
}>

export type CoverLetterToolbar_CoverLettersQuery = {
  __typename?: 'Query'
  coverLetters: Array<{ __typename?: 'UsersJobsCoverLetterType'; id: string; archived: boolean }>
}

export type CoverLetterToolbar_UpdateArchivedCoverLetterMutationVariables = Exact<{
  coverLetterId: Scalars['ID']['input']
  archived: Scalars['Boolean']['input']
}>

export type CoverLetterToolbar_UpdateArchivedCoverLetterMutation = {
  __typename?: 'Mutation'
  updateArchivedCoverLetter: {
    __typename?: 'UsersJobsCoverLetterType'
    id: string
    archived: boolean
  }
}

export type CoverLettersToolbar_CoverLettersQueryVariables = Exact<{ [key: string]: never }>

export type CoverLettersToolbar_CoverLettersQuery = {
  __typename?: 'Query'
  coverLetters: Array<{ __typename?: 'UsersJobsCoverLetterType'; id: string }>
}

export type InterviewsToolbar_InterviewsQueryVariables = Exact<{ [key: string]: never }>

export type InterviewsToolbar_InterviewsQuery = {
  __typename?: 'Query'
  interviews: Array<{ __typename?: 'Interview'; id: string }>
}

export type JobPostingsToolbar_ExportCsvMutationVariables = Exact<{ [key: string]: never }>

export type JobPostingsToolbar_ExportCsvMutation = {
  __typename?: 'Mutation'
  exportUsersJobToCsv: string
}

export type ResumeBuilderToolbar_ArchiveResumeMutationVariables = Exact<{
  id: Scalars['ID']['input']
  archived: Scalars['Boolean']['input']
}>

export type ResumeBuilderToolbar_ArchiveResumeMutation = {
  __typename?: 'Mutation'
  updateArchivedResume: { __typename?: 'Resumes'; id: string; archived: boolean }
}

export type ResumeBuilderToolbar_GetResumeQueryVariables = Exact<{
  id: Scalars['ID']['input']
}>

export type ResumeBuilderToolbar_GetResumeQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; archived: boolean }>
}

export type ResumesToolbar_ResumesQueryVariables = Exact<{
  archived?: InputMaybe<Scalars['Boolean']['input']>
}>

export type ResumesToolbar_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type CreateResumeMutationVariables = Exact<{
  name: Scalars['String']['input']
}>

export type CreateResumeMutation = {
  __typename?: 'Mutation'
  createResume: { __typename?: 'Resumes'; id: string; name: string }
}

export type AuthResponseFragment = {
  __typename?: 'AuthResponse'
  token?: string | null
  user?: { __typename?: 'Users'; id: string; role: UsersRoleEnum } | null
}

export type ProviderAuthenticationMutationVariables = Exact<{
  data: Scalars['String']['input']
  firstName?: InputMaybe<Scalars['String']['input']>
  lastName?: InputMaybe<Scalars['String']['input']>
  provider: AuthProviderTypeEnum
  resumeUniqueId?: InputMaybe<Scalars['ID']['input']>
  referredByUserUniqueId?: InputMaybe<Scalars['ID']['input']>
}>

export type ProviderAuthenticationMutation = {
  __typename?: 'Mutation'
  authProviderAuthenticate: {
    __typename?: 'AuthResponse'
    token?: string | null
    user?: { __typename?: 'Users'; id: string; role: UsersRoleEnum } | null
  }
}

export type CredentialsAuthenticationSignInMutationVariables = Exact<{
  email: Scalars['String']['input']
  password: Scalars['String']['input']
}>

export type CredentialsAuthenticationSignInMutation = {
  __typename?: 'Mutation'
  authSignIn: {
    __typename?: 'AuthResponse'
    token?: string | null
    user?: { __typename?: 'Users'; id: string; role: UsersRoleEnum } | null
  }
}

export type CredentialsAuthenticationSignUpMutationVariables = Exact<{
  email: Scalars['String']['input']
  firstName?: InputMaybe<Scalars['String']['input']>
  lastName?: InputMaybe<Scalars['String']['input']>
  referredByUserUniqueId?: InputMaybe<Scalars['ID']['input']>
  resumeUniqueId?: InputMaybe<Scalars['ID']['input']>
}>

export type CredentialsAuthenticationSignUpMutation = {
  __typename?: 'Mutation'
  authSignUp: {
    __typename?: 'AuthResponse'
    token?: string | null
    user?: { __typename?: 'Users'; id: string; role: UsersRoleEnum } | null
  }
}

export type CredentialsAuthenticationEmailVerifyMutationVariables = Exact<{
  emailVerificationCode: Scalars['String']['input']
  firstName: Scalars['String']['input']
  lastName: Scalars['String']['input']
  password: Scalars['String']['input']
}>

export type CredentialsAuthenticationEmailVerifyMutation = {
  __typename?: 'Mutation'
  userEmailVerify: {
    __typename?: 'AuthResponse'
    token?: string | null
    user?: { __typename?: 'Users'; id: string; role: UsersRoleEnum } | null
  }
}

export type ResumesQueryVariables = Exact<{ [key: string]: never }>

export type ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string }>
}

export type RootQueryVariables = Exact<{ [key: string]: never }>

export type RootQuery = {
  __typename?: 'Query'
  user: {
    __typename?: 'Users'
    id: string
    completedAllChecklistItems: boolean
    role: UsersRoleEnum
  }
  resumes: Array<{ __typename?: 'Resumes'; id: string }>
}

export type UploadResumeMutationVariables = Exact<{
  uploadSignedId: Scalars['ID']['input']
  name: Scalars['String']['input']
}>

export type UploadResumeMutation = {
  __typename?: 'Mutation'
  uploadResume: { __typename?: 'Resumes'; id: string; name: string }
}

export type UsersJobsFragment = {
  __typename?: 'UsersJobs'
  id: string
  applicationInstructions?: string | null
  createdAt: any
  companyName: string
  isRemote?: boolean | null
  jobDetails?: string | null
  location?: string | null
  notes?: string | null
  payPeriod: UsersJobsPayPeriodEnum
  position: string
  salaryMax?: number | null
  salaryMin?: number | null
  status: UsersJobsStatusEnum
  updatedAt: any
  url?: string | null
  archived: boolean
  rejectedStage?: UsersJobsRejectedStageEnum | null
  interviewStep?: UsersJobsInterviewStepEnum | null
  numClientsApplied: number
  numClientsShared: number
  partnerArchived: boolean
  partnerCreatedByUser?: {
    __typename?: 'Users'
    id: string
    firstName?: string | null
    lastName?: string | null
  } | null
  contacts?: Array<{
    __typename?: 'Contacts'
    id: string
    email?: string | null
    name?: string | null
  }> | null
  resume?: { __typename?: 'Resumes'; id: string; name: string } | null
}

export type UseBillingPlan_SubscriptionSessionCreateMutationVariables = Exact<{
  plan: SubscriptionPlanEnum
}>

export type UseBillingPlan_SubscriptionSessionCreateMutation = {
  __typename?: 'Mutation'
  subscriptionsSessionCreate: string
}

export type UseBillingPlan_BillingPortalUrlMutationVariables = Exact<{ [key: string]: never }>

export type UseBillingPlan_BillingPortalUrlMutation = {
  __typename?: 'Mutation'
  billingPortalUrl: string
}

export type UseBrowserExtensionToast_UserQueryVariables = Exact<{ [key: string]: never }>

export type UseBrowserExtensionToast_UserQuery = {
  __typename?: 'Query'
  user: { __typename?: 'Users'; id: string; usedChromeExtension: boolean }
}

export type UseCreateResume_ResumesQueryVariables = Exact<{ [key: string]: never }>

export type UseCreateResume_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type UsersFragment = {
  __typename?: 'Users'
  id: string
  uniqueId: string
  role: UsersRoleEnum
  email: string
  firstName?: string | null
  lastName?: string | null
  plan: SubscriptionPlanEnum
  tokenCoverLetter: number
  tokenInterviewQuestions: number
  tokenJobMatch: number
  tokenProfessionalSummary: number
  tokenSalaryInsights: number
  tokenLearnSkills: number
  tokenAchievements: number
  tokenInterview: number
  usedChromeExtension: boolean
  numUploadedResumes: number
  numStartedInterviews: number
  referralTokens: number
  hasSubscription: boolean
  isAdvisoryClient: boolean
  isAdvisoryOrgAccount: boolean
}

export type UseCurrentUser_UsersQueryVariables = Exact<{ [key: string]: never }>

export type UseCurrentUser_UsersQuery = {
  __typename?: 'Query'
  user: {
    __typename?: 'Users'
    id: string
    uniqueId: string
    role: UsersRoleEnum
    email: string
    firstName?: string | null
    lastName?: string | null
    plan: SubscriptionPlanEnum
    tokenCoverLetter: number
    tokenInterviewQuestions: number
    tokenJobMatch: number
    tokenProfessionalSummary: number
    tokenSalaryInsights: number
    tokenLearnSkills: number
    tokenAchievements: number
    tokenInterview: number
    usedChromeExtension: boolean
    numUploadedResumes: number
    numStartedInterviews: number
    referralTokens: number
    hasSubscription: boolean
    isAdvisoryClient: boolean
    isAdvisoryOrgAccount: boolean
  }
}

export type UseUploadResume_ResumesQueryVariables = Exact<{ [key: string]: never }>

export type UseUploadResume_ResumesQuery = {
  __typename?: 'Query'
  resumes: Array<{ __typename?: 'Resumes'; id: string; name: string }>
}

export type ResumesFragment = {
  __typename?: 'Resumes'
  id: string
  uniqueId?: string | null
  createdAt: any
  updatedAt: any
  name: string
  archived: boolean
  firstName?: string | null
  lastName?: string | null
  email?: string | null
  linkedinUrl?: string | null
  phoneNumber?: string | null
  professionalSummary?: string | null
  website?: string | null
  location?: string | null
  suggestedSkills: Array<string>
  documentUrl?: string | null
  documentType?: ResumeDocumentType | null
  showOriginalDocument: boolean
  hideEducations: boolean
  hideProjects: boolean
  hideSkills: boolean
  hideSummary: boolean
  hideCertifications: boolean
  hideWorkExperiences: boolean
  hideCourseworks: boolean
  hideInvolvements: boolean
  sectionsOrder: Array<ResumeSortableSections>
  template: ResumesTemplateEnum
  templateColorEnum?: ResumesTemplateColorEnum | null
  aiGenerated: boolean
  courseworks: Array<{
    __typename?: 'ResumesCoursework'
    id: string
    name?: string | null
    institutionName?: string | null
    endDate?: any | null
    achievements: Array<string>
    currentlyWorkingOnCourse: boolean
  }>
  educations: Array<{
    __typename?: 'ResumesEducation'
    id: string
    additionalInformation?: string | null
    degree?: string | null
    endDate?: any | null
    startDate?: any | null
    gpa?: string | null
    institutionName: string
    location?: string | null
    currentlyInEducation: boolean
  }>
  involvements: Array<{
    __typename?: 'ResumesInvolvement'
    id: string
    name?: string | null
    organizationName?: string | null
    startDate?: any | null
    endDate?: any | null
    achievements: Array<string>
    currentlyWorkingOnInvolvement: boolean
  }>
  projects: Array<{
    __typename?: 'ResumesProject'
    id: string
    achievements: Array<string>
    name: string
    endDate?: any | null
    startDate?: any | null
    currentlyWorkingOnProject: boolean
  }>
  workExperiences: Array<{
    __typename?: 'ResumesWorkExperience'
    id: string
    companyDescription?: string | null
    companyName: string
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    workPositions: Array<{
      __typename?: 'ResumesWorkPosition'
      id: string
      achievements: Array<string>
      location?: string | null
      name: string
      startDate?: any | null
      endDate?: any | null
      currentlyInPosition: boolean
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
    }>
  }>
  groupedSkills: Array<{
    __typename?: 'ResumesGroupedSkill'
    id: string
    category?: string | null
    skills: Array<string>
  }>
  simpleAnalysis: Array<{
    __typename?: 'FieldMessageType'
    field: string
    errorMessage?: string | null
  }>
  certifications: Array<{
    __typename?: 'ResumesCertification'
    id: string
    name: string
    completionDate?: any | null
    provider?: string | null
  }>
}

export type ResumeBuilder_GetResumeQueryVariables = Exact<{
  resumeId?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
}>

export type ResumeBuilder_GetResumeQuery = {
  __typename?: 'Query'
  resumes: Array<{
    __typename?: 'Resumes'
    id: string
    documentUrl?: string | null
    uniqueId?: string | null
    createdAt: any
    updatedAt: any
    name: string
    archived: boolean
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    linkedinUrl?: string | null
    phoneNumber?: string | null
    professionalSummary?: string | null
    website?: string | null
    location?: string | null
    suggestedSkills: Array<string>
    documentType?: ResumeDocumentType | null
    showOriginalDocument: boolean
    hideEducations: boolean
    hideProjects: boolean
    hideSkills: boolean
    hideSummary: boolean
    hideCertifications: boolean
    hideWorkExperiences: boolean
    hideCourseworks: boolean
    hideInvolvements: boolean
    sectionsOrder: Array<ResumeSortableSections>
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
    aiGenerated: boolean
    courseworks: Array<{
      __typename?: 'ResumesCoursework'
      id: string
      name?: string | null
      institutionName?: string | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnCourse: boolean
    }>
    educations: Array<{
      __typename?: 'ResumesEducation'
      id: string
      additionalInformation?: string | null
      degree?: string | null
      endDate?: any | null
      startDate?: any | null
      gpa?: string | null
      institutionName: string
      location?: string | null
      currentlyInEducation: boolean
    }>
    involvements: Array<{
      __typename?: 'ResumesInvolvement'
      id: string
      name?: string | null
      organizationName?: string | null
      startDate?: any | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnInvolvement: boolean
    }>
    projects: Array<{
      __typename?: 'ResumesProject'
      id: string
      achievements: Array<string>
      name: string
      endDate?: any | null
      startDate?: any | null
      currentlyWorkingOnProject: boolean
    }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      id: string
      companyDescription?: string | null
      companyName: string
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        id: string
        achievements: Array<string>
        location?: string | null
        name: string
        startDate?: any | null
        endDate?: any | null
        currentlyInPosition: boolean
        simpleAnalysis: Array<{
          __typename?: 'FieldMessageType'
          field: string
          errorMessage?: string | null
        }>
      }>
    }>
    groupedSkills: Array<{
      __typename?: 'ResumesGroupedSkill'
      id: string
      category?: string | null
      skills: Array<string>
    }>
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    certifications: Array<{
      __typename?: 'ResumesCertification'
      id: string
      name: string
      completionDate?: any | null
      provider?: string | null
    }>
  }>
}

export type ResumeBuilder_GetResumeUnauthenticatedQueryVariables = Exact<{
  id: Scalars['ID']['input']
}>

export type ResumeBuilder_GetResumeUnauthenticatedQuery = {
  __typename?: 'Query'
  resumeUnauthenticated?: {
    __typename?: 'Resumes'
    id: string
    uniqueId?: string | null
    createdAt: any
    updatedAt: any
    name: string
    archived: boolean
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    linkedinUrl?: string | null
    phoneNumber?: string | null
    professionalSummary?: string | null
    website?: string | null
    location?: string | null
    suggestedSkills: Array<string>
    documentUrl?: string | null
    documentType?: ResumeDocumentType | null
    showOriginalDocument: boolean
    hideEducations: boolean
    hideProjects: boolean
    hideSkills: boolean
    hideSummary: boolean
    hideCertifications: boolean
    hideWorkExperiences: boolean
    hideCourseworks: boolean
    hideInvolvements: boolean
    sectionsOrder: Array<ResumeSortableSections>
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
    aiGenerated: boolean
    courseworks: Array<{
      __typename?: 'ResumesCoursework'
      id: string
      name?: string | null
      institutionName?: string | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnCourse: boolean
    }>
    educations: Array<{
      __typename?: 'ResumesEducation'
      id: string
      additionalInformation?: string | null
      degree?: string | null
      endDate?: any | null
      startDate?: any | null
      gpa?: string | null
      institutionName: string
      location?: string | null
      currentlyInEducation: boolean
    }>
    involvements: Array<{
      __typename?: 'ResumesInvolvement'
      id: string
      name?: string | null
      organizationName?: string | null
      startDate?: any | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnInvolvement: boolean
    }>
    projects: Array<{
      __typename?: 'ResumesProject'
      id: string
      achievements: Array<string>
      name: string
      endDate?: any | null
      startDate?: any | null
      currentlyWorkingOnProject: boolean
    }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      id: string
      companyDescription?: string | null
      companyName: string
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        id: string
        achievements: Array<string>
        location?: string | null
        name: string
        startDate?: any | null
        endDate?: any | null
        currentlyInPosition: boolean
        simpleAnalysis: Array<{
          __typename?: 'FieldMessageType'
          field: string
          errorMessage?: string | null
        }>
      }>
    }>
    groupedSkills: Array<{
      __typename?: 'ResumesGroupedSkill'
      id: string
      category?: string | null
      skills: Array<string>
    }>
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    certifications: Array<{
      __typename?: 'ResumesCertification'
      id: string
      name: string
      completionDate?: any | null
      provider?: string | null
    }>
  } | null
}

export type ResumeBuilder_GetClientResumeQueryVariables = Exact<{
  clientId: Scalars['ID']['input']
  resumeId?: InputMaybe<Array<Scalars['ID']['input']> | Scalars['ID']['input']>
}>

export type ResumeBuilder_GetClientResumeQuery = {
  __typename?: 'Query'
  clientResumes: Array<{
    __typename?: 'Resumes'
    id: string
    uniqueId?: string | null
    createdAt: any
    updatedAt: any
    name: string
    archived: boolean
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    linkedinUrl?: string | null
    phoneNumber?: string | null
    professionalSummary?: string | null
    website?: string | null
    location?: string | null
    suggestedSkills: Array<string>
    documentUrl?: string | null
    documentType?: ResumeDocumentType | null
    showOriginalDocument: boolean
    hideEducations: boolean
    hideProjects: boolean
    hideSkills: boolean
    hideSummary: boolean
    hideCertifications: boolean
    hideWorkExperiences: boolean
    hideCourseworks: boolean
    hideInvolvements: boolean
    sectionsOrder: Array<ResumeSortableSections>
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
    aiGenerated: boolean
    courseworks: Array<{
      __typename?: 'ResumesCoursework'
      id: string
      name?: string | null
      institutionName?: string | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnCourse: boolean
    }>
    educations: Array<{
      __typename?: 'ResumesEducation'
      id: string
      additionalInformation?: string | null
      degree?: string | null
      endDate?: any | null
      startDate?: any | null
      gpa?: string | null
      institutionName: string
      location?: string | null
      currentlyInEducation: boolean
    }>
    involvements: Array<{
      __typename?: 'ResumesInvolvement'
      id: string
      name?: string | null
      organizationName?: string | null
      startDate?: any | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnInvolvement: boolean
    }>
    projects: Array<{
      __typename?: 'ResumesProject'
      id: string
      achievements: Array<string>
      name: string
      endDate?: any | null
      startDate?: any | null
      currentlyWorkingOnProject: boolean
    }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      id: string
      companyDescription?: string | null
      companyName: string
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        id: string
        achievements: Array<string>
        location?: string | null
        name: string
        startDate?: any | null
        endDate?: any | null
        currentlyInPosition: boolean
        simpleAnalysis: Array<{
          __typename?: 'FieldMessageType'
          field: string
          errorMessage?: string | null
        }>
      }>
    }>
    groupedSkills: Array<{
      __typename?: 'ResumesGroupedSkill'
      id: string
      category?: string | null
      skills: Array<string>
    }>
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    certifications: Array<{
      __typename?: 'ResumesCertification'
      id: string
      name: string
      completionDate?: any | null
      provider?: string | null
    }>
  }>
}

export type ResumeBuilder_CreateResumeUnauthenticatedMutationVariables = Exact<{
  attributes?: InputMaybe<ResumesInputObject>
}>

export type ResumeBuilder_CreateResumeUnauthenticatedMutation = {
  __typename?: 'Mutation'
  createResumeUnauthenticated: {
    __typename?: 'Resumes'
    id: string
    uniqueId?: string | null
    createdAt: any
    updatedAt: any
    name: string
    archived: boolean
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    linkedinUrl?: string | null
    phoneNumber?: string | null
    professionalSummary?: string | null
    website?: string | null
    location?: string | null
    suggestedSkills: Array<string>
    documentUrl?: string | null
    documentType?: ResumeDocumentType | null
    showOriginalDocument: boolean
    hideEducations: boolean
    hideProjects: boolean
    hideSkills: boolean
    hideSummary: boolean
    hideCertifications: boolean
    hideWorkExperiences: boolean
    hideCourseworks: boolean
    hideInvolvements: boolean
    sectionsOrder: Array<ResumeSortableSections>
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
    aiGenerated: boolean
    courseworks: Array<{
      __typename?: 'ResumesCoursework'
      id: string
      name?: string | null
      institutionName?: string | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnCourse: boolean
    }>
    educations: Array<{
      __typename?: 'ResumesEducation'
      id: string
      additionalInformation?: string | null
      degree?: string | null
      endDate?: any | null
      startDate?: any | null
      gpa?: string | null
      institutionName: string
      location?: string | null
      currentlyInEducation: boolean
    }>
    involvements: Array<{
      __typename?: 'ResumesInvolvement'
      id: string
      name?: string | null
      organizationName?: string | null
      startDate?: any | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnInvolvement: boolean
    }>
    projects: Array<{
      __typename?: 'ResumesProject'
      id: string
      achievements: Array<string>
      name: string
      endDate?: any | null
      startDate?: any | null
      currentlyWorkingOnProject: boolean
    }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      id: string
      companyDescription?: string | null
      companyName: string
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        id: string
        achievements: Array<string>
        location?: string | null
        name: string
        startDate?: any | null
        endDate?: any | null
        currentlyInPosition: boolean
        simpleAnalysis: Array<{
          __typename?: 'FieldMessageType'
          field: string
          errorMessage?: string | null
        }>
      }>
    }>
    groupedSkills: Array<{
      __typename?: 'ResumesGroupedSkill'
      id: string
      category?: string | null
      skills: Array<string>
    }>
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    certifications: Array<{
      __typename?: 'ResumesCertification'
      id: string
      name: string
      completionDate?: any | null
      provider?: string | null
    }>
  }
}

export type ResumeBuilder_UpdateResumeUnauthenticatedMutationVariables = Exact<{
  resumeUniqueId: Scalars['ID']['input']
  attributes: ResumesInputObject
}>

export type ResumeBuilder_UpdateResumeUnauthenticatedMutation = {
  __typename?: 'Mutation'
  updateResumeUnauthenticated: {
    __typename?: 'Resumes'
    id: string
    uniqueId?: string | null
    createdAt: any
    updatedAt: any
    name: string
    archived: boolean
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    linkedinUrl?: string | null
    phoneNumber?: string | null
    professionalSummary?: string | null
    website?: string | null
    location?: string | null
    suggestedSkills: Array<string>
    documentUrl?: string | null
    documentType?: ResumeDocumentType | null
    showOriginalDocument: boolean
    hideEducations: boolean
    hideProjects: boolean
    hideSkills: boolean
    hideSummary: boolean
    hideCertifications: boolean
    hideWorkExperiences: boolean
    hideCourseworks: boolean
    hideInvolvements: boolean
    sectionsOrder: Array<ResumeSortableSections>
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
    aiGenerated: boolean
    courseworks: Array<{
      __typename?: 'ResumesCoursework'
      id: string
      name?: string | null
      institutionName?: string | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnCourse: boolean
    }>
    educations: Array<{
      __typename?: 'ResumesEducation'
      id: string
      additionalInformation?: string | null
      degree?: string | null
      endDate?: any | null
      startDate?: any | null
      gpa?: string | null
      institutionName: string
      location?: string | null
      currentlyInEducation: boolean
    }>
    involvements: Array<{
      __typename?: 'ResumesInvolvement'
      id: string
      name?: string | null
      organizationName?: string | null
      startDate?: any | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnInvolvement: boolean
    }>
    projects: Array<{
      __typename?: 'ResumesProject'
      id: string
      achievements: Array<string>
      name: string
      endDate?: any | null
      startDate?: any | null
      currentlyWorkingOnProject: boolean
    }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      id: string
      companyDescription?: string | null
      companyName: string
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        id: string
        achievements: Array<string>
        location?: string | null
        name: string
        startDate?: any | null
        endDate?: any | null
        currentlyInPosition: boolean
        simpleAnalysis: Array<{
          __typename?: 'FieldMessageType'
          field: string
          errorMessage?: string | null
        }>
      }>
    }>
    groupedSkills: Array<{
      __typename?: 'ResumesGroupedSkill'
      id: string
      category?: string | null
      skills: Array<string>
    }>
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    certifications: Array<{
      __typename?: 'ResumesCertification'
      id: string
      name: string
      completionDate?: any | null
      provider?: string | null
    }>
  }
}

export type ResumeBuilder_UpdateResumeMutationVariables = Exact<{
  resumeId: Scalars['ID']['input']
  attributes: ResumesInputObject
}>

export type ResumeBuilder_UpdateResumeMutation = {
  __typename?: 'Mutation'
  updateResume: {
    __typename?: 'Resumes'
    id: string
    uniqueId?: string | null
    createdAt: any
    updatedAt: any
    name: string
    archived: boolean
    firstName?: string | null
    lastName?: string | null
    email?: string | null
    linkedinUrl?: string | null
    phoneNumber?: string | null
    professionalSummary?: string | null
    website?: string | null
    location?: string | null
    suggestedSkills: Array<string>
    documentUrl?: string | null
    documentType?: ResumeDocumentType | null
    showOriginalDocument: boolean
    hideEducations: boolean
    hideProjects: boolean
    hideSkills: boolean
    hideSummary: boolean
    hideCertifications: boolean
    hideWorkExperiences: boolean
    hideCourseworks: boolean
    hideInvolvements: boolean
    sectionsOrder: Array<ResumeSortableSections>
    template: ResumesTemplateEnum
    templateColorEnum?: ResumesTemplateColorEnum | null
    aiGenerated: boolean
    courseworks: Array<{
      __typename?: 'ResumesCoursework'
      id: string
      name?: string | null
      institutionName?: string | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnCourse: boolean
    }>
    educations: Array<{
      __typename?: 'ResumesEducation'
      id: string
      additionalInformation?: string | null
      degree?: string | null
      endDate?: any | null
      startDate?: any | null
      gpa?: string | null
      institutionName: string
      location?: string | null
      currentlyInEducation: boolean
    }>
    involvements: Array<{
      __typename?: 'ResumesInvolvement'
      id: string
      name?: string | null
      organizationName?: string | null
      startDate?: any | null
      endDate?: any | null
      achievements: Array<string>
      currentlyWorkingOnInvolvement: boolean
    }>
    projects: Array<{
      __typename?: 'ResumesProject'
      id: string
      achievements: Array<string>
      name: string
      endDate?: any | null
      startDate?: any | null
      currentlyWorkingOnProject: boolean
    }>
    workExperiences: Array<{
      __typename?: 'ResumesWorkExperience'
      id: string
      companyDescription?: string | null
      companyName: string
      simpleAnalysis: Array<{
        __typename?: 'FieldMessageType'
        field: string
        errorMessage?: string | null
      }>
      workPositions: Array<{
        __typename?: 'ResumesWorkPosition'
        id: string
        achievements: Array<string>
        location?: string | null
        name: string
        startDate?: any | null
        endDate?: any | null
        currentlyInPosition: boolean
        simpleAnalysis: Array<{
          __typename?: 'FieldMessageType'
          field: string
          errorMessage?: string | null
        }>
      }>
    }>
    groupedSkills: Array<{
      __typename?: 'ResumesGroupedSkill'
      id: string
      category?: string | null
      skills: Array<string>
    }>
    simpleAnalysis: Array<{
      __typename?: 'FieldMessageType'
      field: string
      errorMessage?: string | null
    }>
    certifications: Array<{
      __typename?: 'ResumesCertification'
      id: string
      name: string
      completionDate?: any | null
      provider?: string | null
    }>
  }
}

export type ResumeBuilder_ScoreResumeMutationVariables = Exact<{
  id: Scalars['ID']['input']
}>

export type ResumeBuilder_ScoreResumeMutation = {
  __typename?: 'Mutation'
  scoreResume: {
    __typename?: 'ResumesScoreType'
    failed: number
    passed: number
    score: number
    total: number
    scoreFields: Array<{
      __typename?: 'ResumesScoreFieldType'
      didPass: boolean
      errorMessage?: string | null
      header: string
      tags?: Array<{ __typename?: 'ResumesScoreFieldTagType'; tagName: string }> | null
    }>
  }
}

export type Plan_SubscriptionSessionFetchMutationVariables = Exact<{
  sessionId: Scalars['ID']['input']
}>

export type Plan_SubscriptionSessionFetchMutation = {
  __typename?: 'Mutation'
  subscriptionsSessionFetch: string
}

type Properties<T> = Required<{
  [K in keyof T]: z.ZodType<T[K], any, T[K]>
}>

type definedNonNullAny = {}

export const isDefinedNonNullAny = (v: any): v is definedNonNullAny => v !== undefined && v !== null

export const definedNonNullAnySchema = z.any().refine((v) => isDefinedNonNullAny(v))

export const AdvisorSortEnumSchema = z.nativeEnum(AdvisorSortEnum)

export const AuthProviderTypeEnumSchema = z.nativeEnum(AuthProviderTypeEnum)

export const CoverLetterLengthEnumSchema = z.nativeEnum(CoverLetterLengthEnum)

export const CoverLetterToneEnumSchema = z.nativeEnum(CoverLetterToneEnum)

export const InterviewsStatusEnumSchema = z.nativeEnum(InterviewsStatusEnum)

export const InterviewsTypeEnumSchema = z.nativeEnum(InterviewsTypeEnum)

export const JobPostingSortEnumSchema = z.nativeEnum(JobPostingSortEnum)

export const ResumeDocumentTypeSchema = z.nativeEnum(ResumeDocumentType)

export const ResumeSortableSectionsSchema = z.nativeEnum(ResumeSortableSections)

export const ResumesTemplateColorEnumSchema = z.nativeEnum(ResumesTemplateColorEnum)

export const ResumesTemplateEnumSchema = z.nativeEnum(ResumesTemplateEnum)

export const SortByDirectionEnumSchema = z.nativeEnum(SortByDirectionEnum)

export const SubscriptionPlanEnumSchema = z.nativeEnum(SubscriptionPlanEnum)

export const UsersJobsInterviewStepEnumSchema = z.nativeEnum(UsersJobsInterviewStepEnum)

export const UsersJobsMatchEnumSchema = z.nativeEnum(UsersJobsMatchEnum)

export const UsersJobsPayPeriodEnumSchema = z.nativeEnum(UsersJobsPayPeriodEnum)

export const UsersJobsRejectedStageEnumSchema = z.nativeEnum(UsersJobsRejectedStageEnum)

export const UsersJobsStatusEnumSchema = z.nativeEnum(UsersJobsStatusEnum)

export const UsersRoleEnumSchema = z.nativeEnum(UsersRoleEnum)

export function ContactsInputObjectSchema(): z.ZodObject<Properties<ContactsInputObject>> {
  return z.object({
    email: z.string(),
    name: z.string(),
  })
}

export function ResumesCertificationInputObjectSchema(): z.ZodObject<
  Properties<ResumesCertificationInputObject>
> {
  return z.object({
    completionDate: definedNonNullAnySchema.nullish(),
    id: z.string().nullish(),
    name: z.string(),
    provider: z.string().nullish(),
  })
}

export function ResumesCourseworkInputObjectSchema(): z.ZodObject<
  Properties<ResumesCourseworkInputObject>
> {
  return z.object({
    achievements: z.array(z.string()),
    currentlyWorkingOnCourse: z.boolean().nullish(),
    endDate: definedNonNullAnySchema.nullish(),
    id: z.string().nullish(),
    institutionName: z.string().nullish(),
    name: z.string().nullish(),
  })
}

export function ResumesEducationInputObjectSchema(): z.ZodObject<
  Properties<ResumesEducationInputObject>
> {
  return z.object({
    additionalInformation: z.string().nullish(),
    currentlyInEducation: z.boolean().nullish(),
    degree: z.string().nullish(),
    endDate: definedNonNullAnySchema.nullish(),
    gpa: z.string().nullish(),
    id: z.string().nullish(),
    institutionName: z.string(),
    location: z.string().nullish(),
    startDate: definedNonNullAnySchema.nullish(),
  })
}

export function ResumesGroupedSkillInputObjectSchema(): z.ZodObject<
  Properties<ResumesGroupedSkillInputObject>
> {
  return z.object({
    category: z.string().nullish(),
    id: z.string().nullish(),
    skills: z.array(z.string()),
  })
}

export function ResumesInputObjectSchema(): z.ZodObject<Properties<ResumesInputObject>> {
  return z.object({
    certificationsAttributes: z.array(z.lazy(() => ResumesCertificationInputObjectSchema())),
    courseworksAttributes: z.array(z.lazy(() => ResumesCourseworkInputObjectSchema())),
    educationsAttributes: z.array(z.lazy(() => ResumesEducationInputObjectSchema())),
    email: z.string().nullish(),
    firstName: z.string().nullish(),
    groupedSkillsAttributes: z.array(z.lazy(() => ResumesGroupedSkillInputObjectSchema())),
    hideCertifications: z.boolean().nullish(),
    hideCourseworks: z.boolean().nullish(),
    hideEducations: z.boolean().nullish(),
    hideInvolvements: z.boolean().nullish(),
    hideProjects: z.boolean().nullish(),
    hideSkills: z.boolean().nullish(),
    hideSummary: z.boolean().nullish(),
    hideWorkExperiences: z.boolean().nullish(),
    involvementsAttributes: z.array(z.lazy(() => ResumesInvolvementInputObjectSchema())),
    lastName: z.string().nullish(),
    linkedinUrl: z.string().nullish(),
    location: z.string().nullish(),
    name: z.string().nullish(),
    phoneNumber: z.string().nullish(),
    professionalSummary: z.string().nullish(),
    projectsAttributes: z.array(z.lazy(() => ResumesProjectInputObjectSchema())),
    sectionsOrder: z.array(ResumeSortableSectionsSchema).nullish(),
    website: z.string().nullish(),
    workExperiencesAttributes: z.array(z.lazy(() => ResumesWorkExperienceInputObjectSchema())),
  })
}

export function ResumesInvolvementInputObjectSchema(): z.ZodObject<
  Properties<ResumesInvolvementInputObject>
> {
  return z.object({
    achievements: z.array(z.string()),
    currentlyWorkingOnInvolvement: z.boolean().nullish(),
    endDate: definedNonNullAnySchema.nullish(),
    id: z.string().nullish(),
    name: z.string().nullish(),
    organizationName: z.string().nullish(),
    startDate: definedNonNullAnySchema.nullish(),
  })
}

export function ResumesProjectInputObjectSchema(): z.ZodObject<
  Properties<ResumesProjectInputObject>
> {
  return z.object({
    achievements: z.array(z.string()),
    currentlyWorkingOnProject: z.boolean().nullish(),
    endDate: definedNonNullAnySchema.nullish(),
    id: z.string().nullish(),
    name: z.string(),
    startDate: definedNonNullAnySchema.nullish(),
  })
}

export function ResumesWorkExperienceInputObjectSchema(): z.ZodObject<
  Properties<ResumesWorkExperienceInputObject>
> {
  return z.object({
    companyDescription: z.string().nullish(),
    companyName: z.string(),
    id: z.string().nullish(),
    workPositionsAttributes: z.array(z.lazy(() => ResumesWorkPositionInputObjectSchema())),
  })
}

export function ResumesWorkPositionInputObjectSchema(): z.ZodObject<
  Properties<ResumesWorkPositionInputObject>
> {
  return z.object({
    achievements: z.array(z.string()),
    currentlyInPosition: z.boolean().nullish(),
    endDate: definedNonNullAnySchema.nullish(),
    id: z.string().nullish(),
    location: z.string().nullish(),
    name: z.string(),
    startDate: definedNonNullAnySchema.nullish(),
  })
}

export function UsersInputObjectSchema(): z.ZodObject<Properties<UsersInputObject>> {
  return z.object({
    firstName: z.string().nullish(),
    lastName: z.string().nullish(),
    linkedinUrl: z.string().nullish(),
    location: z.string().nullish(),
    phoneNumber: z.string().nullish(),
    website: z.string().nullish(),
  })
}

export function UsersJobsCoverLetterInputObjectSchema(): z.ZodObject<
  Properties<UsersJobsCoverLetterInputObject>
> {
  return z.object({
    body: z.string().nullish(),
    candidateAddress: z.string().nullish(),
    companyLocation: z.string().nullish(),
    companyName: z.string().nullish(),
    email: z.string().nullish(),
    firstName: z.string().nullish(),
    footer: z.string().nullish(),
    lastName: z.string().nullish(),
    phoneNumber: z.string().nullish(),
  })
}
